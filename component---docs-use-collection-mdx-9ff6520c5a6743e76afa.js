(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{J24e:function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return b})),t.d(n,"default",(function(){return u}));var a=t("Fcif"),l=t("+I+c"),o=(t("mXGw"),t("/FXl")),r=t("TjRS"),b=(t("aD51"),{});void 0!==b&&b&&b===Object(b)&&Object.isExtensible(b)&&!b.hasOwnProperty("__filemeta")&&Object.defineProperty(b,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"docs/useCollection.mdx"}});var c={_frontmatter:b},i=r.a;function u(e){var n=e.components,t=Object(l.a)(e,["components"]);return Object(o.b)(i,Object(a.a)({},c,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"usecollection"},"useCollection"),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"useCollection(options: Object)")," allows a custom Collection to be built."),Object(o.b)("p",null,"A Collection can be of type: ",Object(o.b)("em",{parentName:"p"},"object")," or ",Object(o.b)("em",{parentName:"p"},"array"),"."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"  const { value, state, updateCollection } = useCollection(options)\n")),Object(o.b)("h2",{id:"arguments"},"Arguments"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},Object(o.b)("inlineCode",{parentName:"strong"},"options")),": object"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},Object(o.b)("inlineCode",{parentName:"strong"},"type")),": string"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"Strings accepted: ",Object(o.b)("strong",{parentName:"li"},"object")," | ",Object(o.b)("strong",{parentName:"li"},"array"),"."))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},Object(o.b)("inlineCode",{parentName:"strong"},"name")),": string"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"A field's name in Usetheform state. ",Object(o.b)("br",null)),Object(o.b)("li",{parentName:"ul"},"If it is rendered within a ",Object(o.b)("inlineCode",{parentName:"li"},"<Collection array />"),", ",Object(o.b)("strong",{parentName:"li"},"name")," is not allowed as a prop."))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},Object(o.b)("inlineCode",{parentName:"strong"},"index")),": string"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"A field's index in an array Collection. ",Object(o.b)("br",null)),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"index")," is only allowed if it is rendered within a ",Object(o.b)("inlineCode",{parentName:"li"},"<Collection array /> "),"."))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},Object(o.b)("inlineCode",{parentName:"strong"},"value")),": array | object"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"Specifies the initial value of a ",Object(o.b)("em",{parentName:"li"},"Collection")," which can be either an array or an object."))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},Object(o.b)("inlineCode",{parentName:"strong"},"reducers")),": array | function"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"An array whose values correspond to different reducer functions."),Object(o.b)("li",{parentName:"ul"},"Reducer functions specify how the Collection's value changes.")))),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"(nextValue, prevValue, formState) => nextValue\n")),Object(o.b)("h2",{id:"returns"},"Returns"),Object(o.b)("p",null,"(",Object(o.b)("strong",{parentName:"p"},Object(o.b)("inlineCode",{parentName:"strong"},"helpers")),"): ",Object(o.b)("inlineCode",{parentName:"p"},"object")),Object(o.b)("p",null,"An object that holds:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},Object(o.b)("inlineCode",{parentName:"strong"},"value")),": the current value of the Collection. It can be an array or an object."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},Object(o.b)("inlineCode",{parentName:"strong"},"updateCollection")),": a function which can change one prop of the Collection."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},Object(o.b)("inlineCode",{parentName:"strong"},"state")),": the current State of the entire Form.")),Object(o.b)("h2",{id:"basic-usage"},"Basic usage"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),'import { useCollection } from "usetheform";\n\nconst CustomCollection = props => {\n  const { value, state, updateCollection } = useCollection({\n    name: "test",\n    type: "object",\n    value: { name: "foo" } // an initialValue if needeed\n  });\n\n  // it changes the prop "name" of the Collection named "test"\n  const onUpdateCollection = () => updateCollection("name", "mickey");\n  \n  return (\n    <div>\n      <span>{value.name}<span>\n      <button type="button" onClick={onUpdateCollection}>\n        Update Collection\n      </button>\n    </div>\n  );\n}\n')),Object(o.b)("h2",{id:"reducers"},"Reducers"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),'import { useCollection } from "usetheform";\n\nconst maxNumber10 = (nextValue, prevValue) => nextValue > 10 ? prevValue : nextValue;\nconst minNumber1 = (nextValue, prevValue) => nextValue <= 1 ? prevValue : nextValue;\n\nconst CustomCollection = props => {\n  const { value, state, updateCollection } = useCollection({\n    name: "test",\n    type: "object",\n    value: { number: 10 } // an initialValue if needeed\n    reducers: [minNumber1, maxNumber10],\n  });\n  \n  const onIncrement = () => updateCollection("number", value.number + 1 );\n  const onDecrement = () => updateCollection("number", value.number - 1 );\n\n  return (\n    <div>\n      <span>{value.number}<span>\n      <button type="button" onClick={onIncrement}>\n        Increment\n      </button>\n      <button type="button" onClick={onDecrement}>\n        Decrement\n      </button>\n    </div>\n  );\n}\n')),Object(o.b)("h2",{id:"validation"},"Validation"),Object(o.b)("p",null,"Validation for Collection starts only on form submission."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),'import { useValidation, useCollection } from "usetheform";\n\nconst lessThan10 = value => {\n  return value && value.number && value.number <= 10\n    ? undefined\n    : "Number not valid";\n};\nconst graterThan0 = value =>\n  value && value.number && value.number >= 0 ? undefined : "Number not valid";\n\nconst CustomCollection = props => {\n  const [status, validation] = useValidation([lessThan10, graterThan0]);\n  const { value, updateCollection } = useCollection({\n    name: "test",\n    type: "object",\n    value: { number: 9 }, // an initialValue if needeed\n    ...validation\n  });\n\n  const onIncrement = () => updateCollection("number", value.number + 1);\n  const onDecrement = () => updateCollection("number", value.number - 1);\n\n  return (\n    <div>\n      <span>{value.number}</span>\n      {status.error && <label>{status.error}</label>}\n      <button type="button" onClick={onIncrement}>\n        Increment\n      </button>\n      <button type="button" onClick={onDecrement}>\n        Decrement\n      </button>\n    </div>\n  );\n}\n')))}void 0!==u&&u&&u===Object(u)&&Object.isExtensible(u)&&!u.hasOwnProperty("__filemeta")&&Object.defineProperty(u,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"docs/useCollection.mdx"}}),u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---docs-use-collection-mdx-9ff6520c5a6743e76afa.js.map