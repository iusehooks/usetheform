(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{BlVX:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return r})),n.d(t,"default",(function(){return s}));var a=n("Fcif"),b=n("+I+c"),l=(n("mXGw"),n("/FXl")),o=n("TjRS"),r=(n("aD51"),{});void 0!==r&&r&&r===Object(r)&&Object.isExtensible(r)&&!r.hasOwnProperty("__filemeta")&&Object.defineProperty(r,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"CHANGELOG.md"}});var i={_frontmatter:r},c=o.a;function s(e){var t=e.components,n=Object(b.a)(e,["components"]);return Object(l.b)(c,Object(a.a)({},i,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h1",{id:"changelog"},"Changelog"),Object(l.b)("h2",{id:"v350"},Object(l.b)("a",Object(a.a)({parentName:"h2"},{href:"https://github.com/iusehooks/usetheform/releases/tag/v3.5.0"}),"v3.5.0")),Object(l.b)("h3",{id:"improvements"},"Improvements:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Enhanced automation tests to support multiple React versions.")),Object(l.b)("h3",{id:"fixes"},"Fixes:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Fixed issues with React 18+ strict mode in certain edge cases when using the ",Object(l.b)("inlineCode",{parentName:"li"},"<Collection array />"))),Object(l.b)("h2",{id:"v341"},Object(l.b)("a",Object(a.a)({parentName:"h2"},{href:"https://github.com/iusehooks/usetheform/releases/tag/v3.4.1"}),"v3.4.1")),Object(l.b)("h3",{id:"improvements-1"},"Improvements:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"In ",Object(l.b)("inlineCode",{parentName:"li"},"usetheform"),", if a Field gets unmounted, its value within the Form state gets cleared. You can now wrap your Field elements between the ",Object(l.b)("inlineCode",{parentName:"li"},"<PersistStateOnUnmount />")," component to preserve the Field's values.")),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Example:")),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),'const Example = () => {\n  const [visible, toggle] = useState(false);\n  return (\n    <Form>\n      <PersistStateOnUnmount>\n        {!visible && (\n          <Collection object name="user">\n            <Input type="text" name="name" value="abc" />\n            <Input type="text" name="lastname" value="foo" />\n          </Collection>\n        )}\n        <Input type="text" name="other" />\n      </PersistStateOnUnmount>\n      <button type="button" onClick={() => toggle((prev) => !prev)}>\n        Toggle Collection\n      </button>\n    </Form>\n  );\n};\n')),Object(l.b)("h2",{id:"v340"},Object(l.b)("a",Object(a.a)({parentName:"h2"},{href:"https://github.com/iusehooks/usetheform/releases/tag/v3.4.0"}),"v3.4.0")),Object(l.b)("h3",{id:"improvements-2"},"Improvements:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Enabling sync and async validation at form level."),Object(l.b)("li",{parentName:"ul"},"Improving documentation.")),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Example:")),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),'const greaterThan10 = ({ values }) =>\n  values && values["A"] + values["B"] > 10 ? undefined : "A+B must be > 10";\n\nfunction App() {\n  const [status, validation] = useValidation([greaterThan10]);\n  return (\n    <Form touched {...validation}>\n      <Collection object name="values">\n        <Input type="number" name="A" value="1" />\n        <Input type="number" name="B" value="2" />\n      </Collection>\n      {status.error && <label>{status.error}</label>}\n      <button type="submit">Press to see results</button>\n    </Form>\n  );\n}\n')),Object(l.b)("h2",{id:"v331"},Object(l.b)("a",Object(a.a)({parentName:"h2"},{href:"https://github.com/iusehooks/usetheform/releases/tag/v3.3.1"}),"v3.3.1")),Object(l.b)("h3",{id:"improvements-3"},"Improvements:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Typescript declaration file for supporting the use of ",Object(l.b)("inlineCode",{parentName:"li"},"usetheform")," within TypeScript projects.")),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Example:")),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-typescript"}),'declare module "usetheform" {\n  export const Form: any;\n  export const Input: any;\n  ...\n}\n')),Object(l.b)("h2",{id:"v330"},Object(l.b)("a",Object(a.a)({parentName:"h2"},{href:"https://github.com/iusehooks/usetheform/releases/tag/v3.3.0"}),"v3.3.0")),Object(l.b)("h3",{id:"improvements-4"},"Improvements:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"innerRef")," prop can now be passed to ",Object(l.b)("inlineCode",{parentName:"li"},"Form"),", ",Object(l.b)("inlineCode",{parentName:"li"},"Input"),", ",Object(l.b)("inlineCode",{parentName:"li"},"Select"),", ",Object(l.b)("inlineCode",{parentName:"li"},"TextArea"),"."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"setValue")," added to ",Object(l.b)("inlineCode",{parentName:"li"},'useField({ type="custom" })'),".")),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Example:")),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),'const CustomField = ({ name }) => {\n  const { value, setValue } = useField({ type: "custom", name, value: "5" });\n  const onSetValue = () => setValue((prev) => ++prev);\n\n  return (\n    <pre>\n      <code data-testid="output">{JSON.stringify(value)}</code>\n      <button type="button" onClick={onSetValue}>\n        Set Value\n      </button>\n    </pre>\n  );\n};\n\nfunction App() {\n  const formRef = useRef();\n  const inputRef = useRef();\n\n  return (\n    <Form innerRef={formRef}>\n      <Input innerRef={inputRef} type="text" name="user" value="BeBo" />\n    </Form>\n  );\n}\n')),Object(l.b)("h2",{id:"v321"},Object(l.b)("a",Object(a.a)({parentName:"h2"},{href:"https://github.com/iusehooks/usetheform/releases/tag/v3.2.1"}),"v3.2.1")),Object(l.b)("h3",{id:"improvements-5"},"Improvements:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Fixed initial value ",Object(l.b)("inlineCode",{parentName:"li"},"undefined")," issue when passed as a prop for ",Object(l.b)("inlineCode",{parentName:"li"},"useField"),", ",Object(l.b)("inlineCode",{parentName:"li"},"Input"),", ",Object(l.b)("inlineCode",{parentName:"li"},"Select"),", ",Object(l.b)("inlineCode",{parentName:"li"},"Collection"),", ",Object(l.b)("inlineCode",{parentName:"li"},"TextArea"),".")),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Example:")),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),'const CustomField = ({ name }) => {\n  const { value } = useField({ type: "text", name, value: "5" });\n\n  // Now, value is defined since the first render => value = "5"\n  // does not need to wait for the <Form /> to be READY\n\n  return (\n    <pre>\n      <code data-testid="output">{JSON.stringify(value)}</code>\n    </pre>\n  );\n};\n\nfunction App() {\n  return (\n    <Form>\n      <Input type="text" name="user" value="BeBo" />\n      <CustomField name="other" />\n    </Form>\n  );\n}\n')),Object(l.b)("h2",{id:"v320"},Object(l.b)("a",Object(a.a)({parentName:"h2"},{href:"https://github.com/iusehooks/usetheform/releases/tag/v3.2.0"}),"v3.2.0")),Object(l.b)("h3",{id:"improvements-6"},"Improvements:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"useSelector"),": ",Object(l.b)("inlineCode",{parentName:"li"},"useSelector(selector: Function)"),' allows picking a single "Field" from the Form state using a selector function.'),Object(l.b)("li",{parentName:"ul"},"Updated documentation."),Object(l.b)("li",{parentName:"ul"},"Some code refactoring.")),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Example:")),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"function Counter() {\n  const [counter, setCounter] = useSelector((state) => state.counter);\n  return <span>{counter}</span>;\n}\n")),Object(l.b)("h2",{id:"v310"},Object(l.b)("a",Object(a.a)({parentName:"h2"},{href:"https://github.com/iusehooks/usetheform/releases/tag/v3.1.0"}),"v3.1.0")),Object(l.b)("h3",{id:"improvements-7"},"Improvements:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"Collection")," now accepts ",Object(l.b)("inlineCode",{parentName:"li"},"touched")," prop for sync validation."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"Form")," is now exported as Named Exports.")),Object(l.b)("h2",{id:"v300"},Object(l.b)("a",Object(a.a)({parentName:"h2"},{href:"https://github.com/iusehooks/usetheform/releases/tag/v3.0.0"}),"v3.0.0")),Object(l.b)("h3",{id:"improvements-8"},"Improvements:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Async and Sync fields validation."),Object(l.b)("li",{parentName:"ul"},"Added ",Object(l.b)("inlineCode",{parentName:"li"},"withIndex")," HOC."),Object(l.b)("li",{parentName:"ul"},"Fixed ",Object(l.b)("inlineCode",{parentName:"li"},"Input")," type number issue."),Object(l.b)("li",{parentName:"ul"},"Fixed React Strict Mode errors."),Object(l.b)("li",{parentName:"ul"},"Updated documentation."),Object(l.b)("li",{parentName:"ul"},"Added new CodeSandbox examples."),Object(l.b)("li",{parentName:"ul"},"Removed unused code.")),Object(l.b)("h2",{id:"v201"},Object(l.b)("a",Object(a.a)({parentName:"h2"},{href:"https://github.com/iusehooks/usetheform/releases/tag/v2.0.1"}),"v2.0.1")),Object(l.b)("h3",{id:"improvements-9"},"Improvements:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Fixed NPM vulnerabilities.")),Object(l.b)("h2",{id:"v200"},Object(l.b)("a",Object(a.a)({parentName:"h2"},{href:"https://github.com/iusehooks/usetheform/releases/tag/v2.0.0"}),"v2.0.0")),Object(l.b)("h3",{id:"changes"},"Changes:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"SSR fully supported."),Object(l.b)("li",{parentName:"ul"},"Added new CodeSandbox examples."),Object(l.b)("li",{parentName:"ul"},"Improved documentation.")),Object(l.b)("h2",{id:"100"},Object(l.b)("a",Object(a.a)({parentName:"h2"},{href:"https://github.com/iusehooks/usetheform/releases/tag/1.0.0"}),"1.0.0")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"UseTheForm 1.0.0 is here! 🎉")))}void 0!==s&&s&&s===Object(s)&&Object.isExtensible(s)&&!s.hasOwnProperty("__filemeta")&&Object.defineProperty(s,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"CHANGELOG.md"}}),s.isMDXComponent=!0}}]);
//# sourceMappingURL=component---changelog-md-8f296417a668071d2748.js.map