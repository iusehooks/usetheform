"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[920],{7384:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"hooks/useValidation","title":"useValidation","description":"useValidation(functions: Array) provides the validation logic to any Field.","source":"@site/docs/hooks/useValidation.mdx","sourceDirName":"hooks","slug":"/hooks/useValidation","permalink":"/usetheform/hooks/useValidation","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"name":"useValidation"},"sidebar":"tutorialSidebar","previous":{"title":"useSelector","permalink":"/usetheform/hooks/useSelector"},"next":{"title":"createFormStore","permalink":"/usetheform/apiReference/createFormStore"}}');var r=s(1085),t=s(1184),a=s(187);const o={name:"useValidation"},l="useValidation",d={},c=[{value:"Arguments",id:"arguments",level:2},{value:"Returns",id:"returns",level:2},{value:"Basic usage",id:"basic-usage",level:2}];function u(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"usevalidation",children:"useValidation"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"useValidation(functions: Array)"})," provides the validation logic to any Field."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const [status, validation] = useValidation([fn1, fn2, ...fnN])\n"})}),"\n",(0,r.jsx)(n.h2,{id:"arguments",children:"Arguments"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"functions"})}),": array"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["A validation function is a pure function which receives the field value and checks whether the value is valid or not, returning ",(0,r.jsx)(n.code,{children:"undefined or null"})," if it is valid, or a string with some custom message if it is not valid."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"returns",children:"Returns"}),"\n",(0,r.jsxs)(n.p,{children:["(",(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"validationProps"})}),"): array"]}),"\n",(0,r.jsx)(n.p,{children:"An array that holds:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"status"})}),": object"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["A plain object that holds a prop named ",(0,r.jsx)(n.code,{children:"error"}),".\r\nThe value of ",(0,r.jsx)(n.code,{children:"error"}),' might be "undefined", if all validation functions have passed the validation with success, or a "string" if one of the validation functions returns an error message.']}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"validationAttr"})}),": object"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"A plain object which contains all the props that must be spread to the field."}),"\n",(0,r.jsx)(n.h2,{id:"basic-usage",children:"Basic usage"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"import { Form, Input, useValidation } from 'usetheform'\n"})}),"\n",(0,r.jsx)(a.A,{children:'function FormWihSyncValidation() {\n  const required = value => (value && value !== "" ? undefined : "Required");\n  const [status, validationAttr] = useValidation([required]);\n  return (\n    <Form>\n      <Input type="text" name="username" touched placeholder="Username" {...validationAttr} />\n      {status.error && <label className="vl">{status.error}</label>}\n    </Form>\n  )\n}'})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}}}]);