"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[265],{3882:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>u,frontMatter:()=>t,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"hooks/useField","title":"useField","description":"useField(options: Object) allows custom input primitives to be built.","source":"@site/docs/hooks/useField.mdx","sourceDirName":"hooks","slug":"/hooks/useField","permalink":"/usetheform/hooks/useField","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"name":"useField","menu":"Hooks"},"sidebar":"tutorialSidebar","previous":{"title":"useCollection","permalink":"/usetheform/hooks/useCollection"},"next":{"title":"useForm","permalink":"/usetheform/hooks/useForm"}}');var l=s(1085),i=s(1184);const t={name:"useField",menu:"Hooks"},d="useField",c={},o=[{value:"Arguments",id:"arguments",level:2},{value:"Returns",id:"returns",level:2},{value:"Basic usage",id:"basic-usage",level:2},{value:"Reducers",id:"reducers",level:2},{value:"Validation",id:"validation",level:2}];function a(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"usefield",children:"useField"})}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"useField(options: Object)"})," allows custom input primitives to be built."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-javascript",children:"  const fieldInputProps = useField(options)\n"})}),"\n",(0,l.jsx)(n.h2,{id:"arguments",children:"Arguments"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"options"})}),": object"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"type"})}),": string"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Strings accepted: ",(0,l.jsx)(n.a,{href:"https://www.w3schools.com/html/html_form_input_types.asp",children:"W3schools Input Types"}),' - "select" - "custom"']}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"name"})}),": string"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["A field's name in Usetheform state. ",(0,l.jsx)("br",{})]}),"\n",(0,l.jsxs)(n.li,{children:["If your Field is rendered within a ",(0,l.jsx)(n.code,{children:"<Collection array />"}),", ",(0,l.jsx)(n.strong,{children:"name"})," is not allowed as a prop."]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"index"})}),": string"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["A field's index in an array Collection. ",(0,l.jsx)("br",{})]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"index"})," is only allowed if your Field is rendered within a ",(0,l.jsx)(n.code,{children:"<Collection array /> "}),"."]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"value"})}),': string | number | object (only for type="custom")']}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Specifies the initial value of an ",(0,l.jsx)(n.em,{children:"input"})," element."]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"checked"})}),": boolean"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Specifies whether an ",(0,l.jsx)(n.em,{children:"input"}),' element should be pre-selected or not (for type="checkbox" or type="radio").']}),"\n",(0,l.jsxs)(n.li,{children:["Default value of ",(0,l.jsx)(n.em,{children:"false"}),"."]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"multiple"})}),": boolean"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:'Valid only when type="select".'}),"\n",(0,l.jsx)(n.li,{children:"When present, it specifies that multiple options can be selected at once."}),"\n",(0,l.jsxs)(n.li,{children:["Default value of ",(0,l.jsx)(n.em,{children:"false"}),"."]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"touched"})}),": boolean"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"A field that has been touched/visited."}),"\n",(0,l.jsxs)(n.li,{children:["Default value of ",(0,l.jsx)(n.em,{children:"false"}),"."]}),"\n",(0,l.jsxs)(n.li,{children:["If ",(0,l.jsx)(n.em,{children:"true"}),", validation messages (sync and async) will be shown only when the event onBlur of the field is triggered by a user action."]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"reducers"})}),": array | function"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"An array whose values correspond to different reducing functions."}),"\n",(0,l.jsx)(n.li,{children:"Reducer functions specify how the Input's value changes."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"(nextValue, prevValue, formState) => nextValue\n"})}),"\n",(0,l.jsx)(n.h2,{id:"returns",children:"Returns"}),"\n",(0,l.jsxs)(n.p,{children:["(",(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"FieldInputProps"})}),"): object"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"An object that holds all the attributes of a field."}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"basic-usage",children:"Basic usage"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-jsx",metastring:'title="CustomInput.ts"',children:'const CustomInput = props => {\r\n  const fieldInputProps = useField({\r\n    type: "text",\r\n    name: "simple",\r\n    value: "foo"\r\n  });\r\n  return <input {...fieldInputProps} />;\r\n}\n'})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-jsx",metastring:'title="CustomField.ts"',children:'const CustomField = ({ name, initialValue = { a: "2" } }) => {\r\n  const { value, setValue } = useField({ type: "custom", name, value: initialValue });\r\n  const onChange = () => setValue(prev => ({ ...prev, a: "1" }));\r\n  return (\r\n    <div>\r\n      <pre>\r\n        <code>{JSON.stringify(value)}</code>\r\n      </pre>\r\n      <button type="button" onClick={onChange}>\r\n        Change Value\r\n      </button>\r\n    </div>\r\n  );\r\n};\n'})}),"\n",(0,l.jsx)(n.h2,{id:"reducers",children:"Reducers"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-jsx",metastring:'title="CustomInput.ts"',children:'const maxNumber10 = (nextValue, prevValue) => nextValue > 10 ? prevValue : nextValue;\r\nconst minNumber1 = (nextValue, prevValue) => nextValue <= 1 ? prevValue : nextValue;\r\n\r\nconst CustomInput = props => {\r\n  const fieldInputProps = useField({\r\n      type: "number",\r\n      name: "numberWithReducer",\r\n      reducers: [minNumber1, maxNumber10],\r\n      value: "1"\r\n    });\r\n  return <input {...fieldInputProps} />;\r\n}\n'})}),"\n",(0,l.jsx)(n.h2,{id:"validation",children:"Validation"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-jsx",metastring:'title="CustomInput.ts"',children:'const email = value =>\r\n    !(value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value))\r\n      ? undefined\r\n      : "Mail not Valid";\r\nconst required = value => (value && value.trim() !== "" ? undefined : "Required");\r\n\r\nconst CustomInput = props => {\r\n  const [status, validation] = useValidation([required, email]);\r\n  const fieldInputProps = useField({\r\n      type: "text",\r\n      touched: true,\r\n      name: "email",\r\n      ...validation\r\n  });\r\n  return (\r\n    <div>\r\n      <input {...fieldInputProps} />\r\n      {status.error && <label>{status.error}</label>}\r\n    </div>\r\n  )\r\n}\n'})})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(a,{...e})}):a(e)}}}]);