"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[848],{3108:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"components/Select","title":"Select","description":"The select element is used to create a drop-down list.","source":"@site/docs/components/Select.mdx","sourceDirName":"components","slug":"/components/Select","permalink":"/usetheform/components/Select","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"name":"Select"},"sidebar":"tutorialSidebar","previous":{"title":"PersistStateOnUnmount","permalink":"/usetheform/components/PersistStateOnUnmount"},"next":{"title":"TextArea","permalink":"/usetheform/components/TextArea"}}');var l=t(1085),i=t(1184),o=t(187);const a={name:"Select"},r="Select",c={},d=[{value:"Props",id:"props",level:2},{value:"Basic usage",id:"basic-usage",level:2},{value:"\ud83d\udd18 Single options",id:"-single-options",level:3},{value:"\u2611\ufe0f Multiple options",id:"\ufe0f-multiple-options",level:3},{value:"Reducers",id:"reducers",level:2},{value:"Validation - Sync",id:"validation---sync",level:2},{value:"Validation - Async",id:"validation---async",level:2}];function u(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"select",children:"Select"})}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.em,{children:"select"})," element is used to create a drop-down list. ",(0,l.jsx)("br",{}),"\r\nIt accepts, as props, any html attribute listed at: ",(0,l.jsx)(n.a,{href:"https://www.w3schools.com/tags/tag_select.asp",children:"Html Select Attributes"}),"."]}),"\n",(0,l.jsx)(n.h2,{id:"props",children:"Props"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"name"})}),": string"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["A field's name in Usetheform state. ",(0,l.jsx)("br",{})]}),"\n",(0,l.jsxs)(n.li,{children:["If your Select is rendered within a ",(0,l.jsx)(n.code,{children:"<Collection array />"}),", ",(0,l.jsx)(n.strong,{children:"name"})," is not allowed as a prop."]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"index"})}),": string"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["A field's index in an array Collection. ",(0,l.jsx)("br",{})]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"index"})," is only allowed if your Select is rendered within a ",(0,l.jsx)(n.code,{children:"<Collection array /> "}),"."]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"value"})}),": string"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Specifies the initial value of a ",(0,l.jsx)(n.em,{children:"select"})," element."]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"touched"})}),": boolean"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["A field that has been touched/visited. Default value of ",(0,l.jsx)(n.em,{children:"false"}),"."]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["If ",(0,l.jsx)(n.em,{children:"true"}),", validation messages (sync and async) will be shown but only when the event onBlur of the field is triggered by a user action."]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"multiple"})}),": boolean"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["When present, it specifies that multiple options can be selected at once. Default value of ",(0,l.jsx)(n.em,{children:"false"}),"."]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"reducers"})}),": array | function"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-javascript",children:"(nextValue, prevValue, formState) => nextValue\n"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"An array whose values correspond to different reducing functions."}),"\n",(0,l.jsx)(n.li,{children:"Reducer functions specify how the Select's value changes."}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"innerRef"})}),": object (a mutable ref object)"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"When you need to access the underlying DOM node created by Select (e.g. to call focus), you can use a ref to store a reference to the select dom node."}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-javascript",children:'const ref = useRef(null)\r\n<Select innerRef={ref} name="test">...options...</Select>\n'})}),"\n",(0,l.jsx)(n.h2,{id:"basic-usage",children:"Basic usage"}),"\n",(0,l.jsx)(n.h3,{id:"-single-options",children:"\ud83d\udd18 Single options"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-javascript",children:"  import { Form, Select } from 'usetheform'\n"})}),"\n",(0,l.jsx)(o.A,{children:'<Form>\n  <Select name="select">\n    <option value="">Select an option</option>\n    <option value="1">1</option>\n    <option value="2">2</option>\n    <option value="3">3</option>\n    <option value="4">4</option>\n  </Select>\n</Form>'}),"\n",(0,l.jsx)(n.h3,{id:"\ufe0f-multiple-options",children:"\u2611\ufe0f Multiple options"}),"\n",(0,l.jsx)(o.A,{children:'<Form>\n  <Select name="select" multiple>\n    <option value="1">1</option>\n    <option value="2">2</option>\n    <option value="3">3</option>\n    <option value="4">4</option>\n  </Select>\n</Form>'}),"\n",(0,l.jsx)(n.h2,{id:"reducers",children:"Reducers"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-javascript",children:"import { Form, Select } from 'usetheform'\n"})}),"\n",(0,l.jsx)(o.A,{children:'function SelectWithReducers() {\n  const tenIfEven = (nextValue, prevValue) => nextValue !== "" && Number(nextValue) % 2 === 0 ? "10" : nextValue;\n  const elevenIfOdd = (nextValue, prevValue) => nextValue !== "" && Number(nextValue) % 2 !== 0 ? "11" : nextValue;\n  return (\n    <Form>\n      <Select name="select" reducers={[tenIfEven, elevenIfOdd]}>\n        <option value="">Select an option</option>\n        <option value="1">1</option>\n        <option value="2">2</option>\n        <option value="3">3</option>\n        <option value="4">4</option>\n        <option value="10">10</option>\n        <option value="11">11</option>\n      </Select>\n    </Form>\n  )\n}'}),"\n",(0,l.jsx)(n.h2,{id:"validation---sync",children:"Validation - Sync"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-javascript",children:"  import { Form, Select, useValidation } from 'usetheform'\n"})}),"\n",(0,l.jsx)(o.A,{children:'function SelectWithSyncValidation() {\n  const required = value => (value && value.trim() !== "" ? undefined : "Required");\n  const [status, validation] = useValidation([required]);\n  return (\n    <Form>\n      <Select name="selectRequired" touched {...validation}>\n        <option value="">Select an option</option>\n        <option value="1">1</option>\n        <option value="2">2</option>\n        <option value="3">3</option>\n        <option value="4">4</option>\n      </Select>\n      {status.error && <label className="vl">{status.error}</label>}\n    </Form>\n  )\n}'}),"\n",(0,l.jsx)(n.h2,{id:"validation---async",children:"Validation - Async"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-javascript",children:"import { Form, Select, useAsyncValidation } from 'usetheform'\r\nimport { Submit } from './Submit.ts'\n"})}),"\n",(0,l.jsx)(o.A,{children:'function SelectAsyncValidation() {\n  const asyncValidIfThree = value =>\n    new Promise((resolve, reject) => {\n      // it could be an API call or any async operation\n      setTimeout(() => {\n        if (value !== "3") {\n          reject("Selection not valid");\n        } else {\n          resolve("Success");\n        }\n      }, 1000);\n  });\n  const [asyncStatus, asyncValidation] = useAsyncValidation(asyncValidIfThree);\n  return (\n    <Form>\n       <Select name="selectRequired" touched {...asyncValidation}>\n        <option value="">Select an option</option>\n        <option value="1">1</option>\n        <option value="2">2</option>\n        <option value="3">3</option>\n      </Select>\n      {asyncStatus.status === undefined && <label className="vl">Async Check Not Started Yet</label>}\n      {asyncStatus.status === "asyncStart" && <label className="vl">Checking...</label>}\n      {asyncStatus.status === "asyncError" && <label className="vl">{asyncStatus.value}</label>}\n      {asyncStatus.status === "asyncSuccess" && <label className="vl">{asyncStatus.value}</label>}\n      <Submit />\n    </Form>\n  )\n}'}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-jsx",metastring:'title="Submit.ts"',children:"import { useAsyncValidation, useForm } from 'usetheform'\r\n\r\nconst Submit = () => {\r\n  const { isValid } = useForm();\r\n  return (\r\n    <button disabled={!isValid} type=\"submit\">\r\n      Submit\r\n    </button>\r\n  );\r\n};\n"})})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(u,{...e})}):u(e)}}}]);