"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[380],{349:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"components/TextArea","title":"TextArea","description":"Renders a textarea element (W3schools Textarea) and accepts as props any html attribute listed at: Html Textarea Attributes.","source":"@site/docs/components/TextArea.mdx","sourceDirName":"components","slug":"/components/TextArea","permalink":"/usetheform/components/TextArea","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"name":"TextArea"},"sidebar":"tutorialSidebar","previous":{"title":"Select","permalink":"/usetheform/components/Select"},"next":{"title":"useAsyncValidation","permalink":"/usetheform/hooks/useAsyncValidation"}}');var t=s(1085),r=s(1184),l=s(9250);const i={name:"TextArea"},c="TextArea",o={},d=[{value:"Props",id:"props",level:2},{value:"Basic usage",id:"basic-usage",level:2},{value:"Reducers",id:"reducers",level:2},{value:"Validation - Sync",id:"validation---sync",level:2},{value:"Validation - Async",id:"validation---async",level:2}];function u(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"textarea",children:"TextArea"})}),"\n",(0,t.jsxs)(n.p,{children:["Renders a ",(0,t.jsx)(n.em,{children:"textarea"})," element (",(0,t.jsx)(n.a,{href:"https://www.w3schools.com/tags/tag_textarea.asp",children:"W3schools Textarea"}),") and accepts as props any html attribute listed at: ",(0,t.jsx)(n.a,{href:"https://www.w3schools.com/tags/tag_textarea.asp",children:"Html Textarea Attributes"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"props",children:"Props"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"name"})}),": string"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["A field's name in Usetheform state. ",(0,t.jsx)("br",{})]}),"\n",(0,t.jsxs)(n.li,{children:["If the TextArea is rendered within a ",(0,t.jsx)(n.code,{children:"<Collection array />"}),", ",(0,t.jsx)(n.strong,{children:"name"})," is not allowed as a prop."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"index"})}),": string"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["A field's index in array Collection. ",(0,t.jsx)("br",{})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"index"})," is only allowed if your TextArea is rendered within a ",(0,t.jsx)(n.code,{children:"<Collection array /> "}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"value"})}),": string"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Specifies the initial value of an ",(0,t.jsx)(n.em,{children:"textarea"})," element."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"touched"})}),": boolean"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["A field that has been touched/visited. Default value of ",(0,t.jsx)(n.em,{children:"false"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["If ",(0,t.jsx)(n.em,{children:"true"}),", validation messages (sync and async) will be shown but only when the event onBlur of the field is triggered by a user action."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"reducers"})}),": array | function"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"(nextValue, prevValue, formState) => nextValue\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"An array whose values correspond to different reducing functions."}),"\n",(0,t.jsx)(n.li,{children:"Reducer functions specify how the TextArea's value change."}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"innerRef"})}),": object (a mutable ref object)"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"When you need to access the underlying DOM node created by TextArea (e.g. to call focus), you can use a ref to store a reference to the textarea dom node."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'const ref = useRef(null)\r\n<TextArea innerRef={ref} name="textarea" value="test" />\n'})}),"\n",(0,t.jsx)(n.h2,{id:"basic-usage",children:"Basic usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"  import { Form, TextArea } from 'usetheform'\n"})}),"\n",(0,t.jsx)(l.A,{children:'\n<Form>\n  <TextArea name="textarea" value="foo" />\n</Form>'}),"\n",(0,t.jsx)(n.h2,{id:"reducers",children:"Reducers"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"  import { Form, TextArea } from 'usetheform'\n"})}),"\n",(0,t.jsx)(l.A,{children:'function TextAreaReducers() {\n  const noHtmlTags = (nextValue, prevValue) => nextValue.replace(/(<([^>]+)>)/ig, "");\n  const notNumber = (nextValue, prevValue) => nextValue.replace(/[0-9]+/ig, "");\n  return (\n    <Form>\n      <TextArea name="textareaReducer" reducers={[noHtmlTags, notNumber]} value="foo" />\n    </Form>\n  )\n}'}),"\n",(0,t.jsx)(n.h2,{id:"validation---sync",children:"Validation - Sync"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"  import { Form, TextArea, useValidation } from 'usetheform'\n"})}),"\n",(0,t.jsx)(l.A,{children:'function TextAreaSyncValidation() {\n  const notNumber = value =>\n  !(value && !/^[A-Za-z ]+$/i.test(value))\n    ? undefined\n    : "Numbers not allowed";\n  const required = value => (value && value.trim() !== "" ? undefined : "Required");\n  const [status, validation] = useValidation([required, notNumber]);\n  return (\n    <Form>\n      <TextArea name="notEmpty" touched {...validation} />\n      {status.error && <label className="vl">{status.error}</label>}\n    </Form>\n  )\n}'}),"\n",(0,t.jsx)(n.h2,{id:"validation---async",children:"Validation - Async"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"import { Form, Select, useAsyncValidation } from 'usetheform'\r\nimport { Submit } from './Submit.ts'\n"})}),"\n",(0,t.jsx)(l.A,{children:'function TextAreaAsyncValidation() {\n   const asyncAcceptOnlyFoo = value =>\n    new Promise((resolve, reject) => {\n      // it could be an API call or any async operation\n      setTimeout(() => {\n        if (value.trim() === "foo") {\n          resolve("Text allowed");\n        } else {\n          reject("Text not allowed");\n        }\n      }, 1000);\n  });\n  const [asyncStatus, asyncValidation] = useAsyncValidation(asyncAcceptOnlyFoo);\n  return (\n    <Form>\n      <TextArea name="text" touched {...asyncValidation} />\n      {asyncStatus.status === undefined && <label className="vl">Async Check Not Started Yet</label>}\n      {asyncStatus.status === "asyncStart" && <label className="vl">Checking...</label>}\n      {asyncStatus.status === "asyncError" && <label className="vl">{asyncStatus.value}</label>}\n      {asyncStatus.status === "asyncSuccess" && <label className="vl">{asyncStatus.value}</label>}\n      <br />\n      <Submit />\n    </Form>\n  )\n}'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",metastring:'title="Submit.ts"',children:"import { useAsyncValidation, useForm } from 'usetheform'\r\n\r\nconst Submit = () => {\r\n  const { isValid } = useForm();\r\n  return (\r\n    <button disabled={!isValid} type=\"submit\">\r\n      Submit\r\n    </button>\r\n  );\r\n};\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}}}]);