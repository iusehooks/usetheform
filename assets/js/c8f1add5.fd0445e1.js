"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[331],{3050:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Introduction","href":"/usetheform/","docId":"index","unlisted":false},{"type":"category","label":"Components","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Collection","href":"/usetheform/components/Collection","docId":"components/Collection","unlisted":false},{"type":"link","label":"Form","href":"/usetheform/components/Form","docId":"components/Form","unlisted":false},{"type":"link","label":"FormContext","href":"/usetheform/components/FormContext","docId":"components/FormContext","unlisted":false},{"type":"link","label":"Input","href":"/usetheform/components/Input","docId":"components/Input","unlisted":false},{"type":"link","label":"PersistStateOnUnmount","href":"/usetheform/components/PersistStateOnUnmount","docId":"components/PersistStateOnUnmount","unlisted":false},{"type":"link","label":"Select","href":"/usetheform/components/Select","docId":"components/Select","unlisted":false},{"type":"link","label":"TextArea","href":"/usetheform/components/TextArea","docId":"components/TextArea","unlisted":false}]},{"type":"category","label":"Hooks","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"useAsyncValidation","href":"/usetheform/hooks/useAsyncValidation","docId":"hooks/useAsyncValidation","unlisted":false},{"type":"link","label":"useCollection","href":"/usetheform/hooks/useCollection","docId":"hooks/useCollection","unlisted":false},{"type":"link","label":"useField","href":"/usetheform/hooks/useField","docId":"hooks/useField","unlisted":false},{"type":"link","label":"useForm","href":"/usetheform/hooks/useForm","docId":"hooks/useForm","unlisted":false},{"type":"link","label":"useMultipleForm","href":"/usetheform/hooks/useMultipleForm","docId":"hooks/useMultipleForm","unlisted":false},{"type":"link","label":"useSelector","href":"/usetheform/hooks/useSelector","docId":"hooks/useSelector","unlisted":false},{"type":"link","label":"useValidation","href":"/usetheform/hooks/useValidation","docId":"hooks/useValidation","unlisted":false}]},{"type":"category","label":"API Reference","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"createFormStore","href":"/usetheform/apiReference/createFormStore","docId":"apiReference/createFormStore","unlisted":false}]},{"type":"link","label":"Best Practices","href":"/usetheform/BestPractices","docId":"BestPractices","unlisted":false},{"type":"link","label":"Material UI - React Select","href":"/usetheform/MaterialuiReactselect","docId":"MaterialuiReactselect","unlisted":false}]},"docs":{"apiReference/createFormStore":{"id":"apiReference/createFormStore","title":"createFormStore","description":"createFormStore(initialFormState: Object) creates a read-only form store that holds the state tree of your Form and the hook function to select a \\"Field\\" from the Form state.","sidebar":"tutorialSidebar"},"BestPractices":{"id":"BestPractices","title":"Best Practices","description":"This guide outlines recommended patterns and practices when working with usetheform to help you build efficient, maintainable form solutions.","sidebar":"tutorialSidebar"},"components/Collection":{"id":"components/Collection","title":"Collection","description":"Creates a nested piece of state within a Form.","sidebar":"tutorialSidebar"},"components/Form":{"id":"components/Form","title":"Form","description":"The Form is the most important component in usetheform. It renders all the Fields and keeps the entire form state synchronized.","sidebar":"tutorialSidebar"},"components/FormContext":{"id":"components/FormContext","title":"FormContext","description":"A React component that provides a more in-depth context of the \\"Form\\".","sidebar":"tutorialSidebar"},"components/Input":{"id":"components/Input","title":"Input","description":"Renders all the inputs of the types listed at Html Input Attributes.","sidebar":"tutorialSidebar"},"components/PersistStateOnUnmount":{"id":"components/PersistStateOnUnmount","title":"PersistStateOnUnmount","description":"In usetheform if a Field gets unmounted its value within the Form state gets cleared.","sidebar":"tutorialSidebar"},"components/Select":{"id":"components/Select","title":"Select","description":"The select element is used to create a drop-down list.","sidebar":"tutorialSidebar"},"components/TextArea":{"id":"components/TextArea","title":"TextArea","description":"Renders a textarea element (W3schools Textarea) and accepts as props any html attribute listed at: Html Textarea Attributes.","sidebar":"tutorialSidebar"},"hooks/useAsyncValidation":{"id":"hooks/useAsyncValidation","title":"useAsyncValidation","description":"useAsyncValidation(validator: Function) provides the async validation logic to any Field.","sidebar":"tutorialSidebar"},"hooks/useCollection":{"id":"hooks/useCollection","title":"useCollection","description":"useCollection(options: Object) allows a custom Collection to be built.","sidebar":"tutorialSidebar"},"hooks/useField":{"id":"hooks/useField","title":"useField","description":"useField(options: Object) allows custom input primitives to be built.","sidebar":"tutorialSidebar"},"hooks/useForm":{"id":"hooks/useForm","title":"useForm","description":"useForm() is a custom React hook that will return helpers and the current state of the form.","sidebar":"tutorialSidebar"},"hooks/useMultipleForm":{"id":"hooks/useMultipleForm","title":"useMultipleForm","description":"useMultipleForm(callback: Function) provides the logic to handle the implementation of wizards.","sidebar":"tutorialSidebar"},"hooks/useSelector":{"id":"hooks/useSelector","title":"useSelector","description":"useSelector(selector: Function) allows a user to pick a single \\"Field\\" from the form state using a selector function.","sidebar":"tutorialSidebar"},"hooks/useValidation":{"id":"hooks/useValidation","title":"useValidation","description":"useValidation(functions: Array) provides the validation logic to any Field.","sidebar":"tutorialSidebar"},"index":{"id":"index","title":"Introduction","description":"Welcome! \ud83d\udc4b Usetheform is a lightweight, dependency-free React library for composing declarative forms and managing their state. It\'s simple to use, flexible, and powerful for handling nested fields, validation, and much more.","sidebar":"tutorialSidebar"},"MaterialuiReactselect":{"id":"MaterialuiReactselect","title":"Material UI - React Select","description":"Below are some examples showing how to integrate usetheform with third party libraries like: Material-UI and React Select.","sidebar":"tutorialSidebar"}}}}')}}]);