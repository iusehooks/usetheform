"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[24],{7504:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"components/Input","title":"Input","description":"Renders all the inputs of the types listed at Html Input Attributes.","source":"@site/docs/components/Input.mdx","sourceDirName":"components","slug":"/components/Input","permalink":"/usetheform/components/Input","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"name":"Input"},"sidebar":"tutorialSidebar","previous":{"title":"FormContext","permalink":"/usetheform/components/FormContext"},"next":{"title":"PersistStateOnUnmount","permalink":"/usetheform/components/PersistStateOnUnmount"}}');var r=s(1085),a=s(1184),l=s(187);const i={name:"Input"},c="Input",o={},d=[{value:"Props",id:"props",level:2},{value:"Basic usage",id:"basic-usage",level:2},{value:"Reducers",id:"reducers",level:2},{value:"Validation - Sync",id:"validation---sync",level:2},{value:"Validation - Async",id:"validation---async",level:2},{value:"Detailed Explanation:",id:"detailed-explanation",level:4}];function u(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"input",children:"Input"})}),"\n",(0,r.jsxs)(n.p,{children:["Renders all the inputs of the types listed at: ",(0,r.jsx)(n.a,{href:"https://www.w3schools.com/html/html_form_input_types.asp",children:"W3schools Input Types"})," and accepts as props any html attribute listed at: ",(0,r.jsx)(n.a,{href:"https://www.w3schools.com/tags/tag_input.asp",children:"Html Input Attributes"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"props",children:"Props"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"type"})}),": string"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Type listed at: ",(0,r.jsx)(n.a,{href:"https://www.w3schools.com/html/html_form_input_types.asp",children:"W3schools Input Types"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"name"})}),": string"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["A field's name in Usetheform state. ",(0,r.jsx)("br",{})]}),"\n",(0,r.jsxs)(n.li,{children:["If the Input is rendered within a ",(0,r.jsx)(n.code,{children:"<Collection array />"}),", ",(0,r.jsx)(n.strong,{children:"name"})," is not allowed as prop."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"index"})}),": string"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["A field's index in an array Collection. ",(0,r.jsx)("br",{})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"index"})," is only allowed if your Input is rendered within a ",(0,r.jsx)(n.code,{children:"<Collection array /> "}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"value"})}),": string | number"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Specifies the initial value of an ",(0,r.jsx)(n.em,{children:"input"})," element."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"checked"})}),": boolean"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Specifies whether an ",(0,r.jsx)(n.em,{children:"input"}),' element should be pre-selected or not (for type="checkbox" or type="radio").']}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"touched"})}),": boolean"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["A field that has been touched/visited. Default value of ",(0,r.jsx)(n.em,{children:"false"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["If ",(0,r.jsx)(n.em,{children:"true"}),", validation messages (sync and async) will be shown but only when the event onBlur of the field is triggered by a user action."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"reducers"})}),": array | function"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"(nextValue, prevValue, formState) => nextValue\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"An array whose values correspond to different reducing functions."}),"\n",(0,r.jsx)(n.li,{children:"Reducer functions specify how the Input's value changes."}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"innerRef"})}),": object (a mutable ref object)"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"When you need to access the underlying DOM node created by an Input (e.g. to call focus), you can use a ref to store a reference to the input dom node."}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'const ref = useRef(null)\r\n<Input innerRef={ref} type="text" name="test" />\n'})}),"\n",(0,r.jsx)(n.h2,{id:"basic-usage",children:"Basic usage"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"import { Form, Input, Collection } from 'usetheform'\n"})}),"\n",(0,r.jsx)(l.A,{children:'<Form>\n  <Input type="text" name="name" value="foo" placeholder="Name" />\n  <div className="flex space-x-4">\n    <Input type="radio" name="gender" value="M" placeholder="M" />\n    <Input type="radio" name="gender" value="F" placeholder="F" />\n    <Input type="radio" name="gender" value="Other" placeholder="Other" />\n  </div>\n  <div className="flex space-x-4">\n    <Input type="checkbox" name="option1" checked placeholder="Option 1" />\n    <Input type="checkbox" name="option2" placeholder="Option 2" />\n  </div>\n  <Input type="file" name="file" />\n</Form>'}),"\n",(0,r.jsx)(n.h2,{id:"reducers",children:"Reducers"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"import { Form, Input } from 'usetheform'\n"})}),"\n",(0,r.jsx)(l.A,{children:'function InputWithReducers () {\n  const prevNumberGreater10 = (nextValue, prevValue) => nextValue > 10 ? prevValue : nextValue;\n  const prevNumberLessThan1 = (nextValue, prevValue) => nextValue <= 0 ? prevValue : nextValue;\n  return (\n    <Form>\n      <Input type="number" name="numberWithReducer" reducers={[prevNumberLessThan1, prevNumberGreater10]} placeholder="Number" value="1" />\n    </Form>\n  )\n}\n'}),"\n",(0,r.jsx)(n.h2,{id:"validation---sync",children:"Validation - Sync"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"import { Form, useValidation } from 'usetheform'\n"})}),"\n",(0,r.jsx)(l.A,{children:'function FormSyncValidation() {\n  const isValidEmail = value =>\n  !(value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+.[A-Z]{2,4}$/i.test(value))\n    ? undefined\n    : "Mail not Valid";\n  const required = value => (value && value.trim() !== "" ? undefined : "Required");\n  const [status, validation] = useValidation([required, isValidEmail]);\n  return (\n    <Form>\n      <Input type="text" name="email" touched placeholder="Email" {...validation} />\n      {status.error && <label className="vl">{status.error}</label>}\n      <Submit />\n    </Form>\n  )\n}'}),"\n",(0,r.jsx)(n.h2,{id:"validation---async",children:"Validation - Async"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"import { Form, Input, useAsyncValidation } from 'usetheform';\n"})}),"\n",(0,r.jsx)(l.A,{children:'function FormAsyncValidation() {\n  const [asyncStatus, asyncValidation] = useAsyncValidation(asyncTestInput);\n  return (\n    <Form>\n      <Input type="text" name="username" touched placeholder="Username" {...asyncValidation} />\n      {asyncStatus.status === undefined && <label className="vl">Async Check Not Started Yet</label>}\n      {asyncStatus.status === "asyncStart" && <label className="vl">Checking...</label>}\n      {asyncStatus.status === "asyncError" && <label className="vl">{asyncStatus.value}</label>}\n      {asyncStatus.status === "asyncSuccess" && <label className="vl">{asyncStatus.value}</label>}\n      <br />\n      <Submit />\n    </Form>\n  )\n}'}),"\n",(0,r.jsx)(n.h4,{id:"detailed-explanation",children:"Detailed Explanation:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",metastring:'title="Submit.ts"',children:"import { useForm } from 'usetheform'\r\n\r\nexport const Submit = () => {\r\n  const { isValid } = useForm();\r\n  return (\r\n    <button disabled={!isValid} type=\"submit\">\r\n      Submit\r\n    </button>\r\n  );\r\n};\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",metastring:'title="AsyncValidators.ts"',children:'export const asyncTestInput = value =>\r\n  new Promise((resolve, reject) => {\r\n    // it could be an API call or any async operation\r\n    setTimeout(() => {\r\n      if (value === "foo") {\r\n        reject("username already in use");\r\n      } else {\r\n        resolve("Success");\r\n      }\r\n    }, 1000);\r\n  });\n'})})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}}}]);