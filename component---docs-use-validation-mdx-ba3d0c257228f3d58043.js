(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{jPhY:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return u})),n.d(t,"default",(function(){return m}));var a=n("Fcif"),r=n("+I+c"),i=(n("mXGw"),n("/FXl")),o=n("TjRS"),l=n("ZFoC"),b=n("RnGj"),c=n("8xEu"),s=n("oXiK"),u=(n("aD51"),{});void 0!==u&&u&&u===Object(u)&&Object.isExtensible(u)&&!u.hasOwnProperty("__filemeta")&&Object.defineProperty(u,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"docs/useValidation.mdx"}});var p={_frontmatter:u},d=o.a;function m(e){var t,n=e.components,m=Object(r.a)(e,["components"]);return Object(i.b)(d,Object(a.a)({},p,m,{components:n,mdxType:"MDXLayout"}),Object(i.b)("h1",{id:"usevalidation"},"useValidation"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"useValidation(functions: Array)")," provides the validation logic to any Field."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"  const [status, validation] = useValidation([fn1, fn2, ...fnN])\n")),Object(i.b)("h2",{id:"arguments"},"Arguments"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"functions")),": array"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"A validation function is a pure function which receives the field value and checks whether the value is valid or not, returning ",Object(i.b)("inlineCode",{parentName:"li"},"undefined or null")," if it is valid, or a string with some custom message if it is not valid.")),Object(i.b)("h2",{id:"returns"},"Returns"),Object(i.b)("p",null,"(",Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"validationProps")),"): array"),Object(i.b)("p",null,"An array that holds:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"status")),": object"),Object(i.b)("p",{parentName:"li"},"A plain object that holds a prop named ",Object(i.b)("inlineCode",{parentName:"p"},"error"),".\nThe value of ",Object(i.b)("inlineCode",{parentName:"p"},"error"),' might be "undefined", if all validation functions have passed the validation with success, or a "string" if one of the validation functions returns an error message.')),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"validationAttr")),": object"),Object(i.b)("p",{parentName:"li"},"A plain object which contains all the props that must be spread to the field."))),Object(i.b)("h2",{id:"basic-usage"},"Basic usage"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"  import { Form, Input, useValidation } from 'usetheform'\n")),Object(i.b)(l.b,{__position:0,__code:'() => {\n  const required = value => (value && value !== \'\' ? undefined : \'Required\')\n  const [status, validationAttr] = useValidation([required])\n  return (\n    <Form>\n      <Input\n        type="text"\n        name="username"\n        touched\n        placeholder="Username"\n        {...validationAttr}\n      />\n      {status.error && <label>{status.error}</label>}\n    </Form>\n  )\n}',__scope:(t={props:m,DefaultLayout:o.a,Playground:l.b,Form:b.a,Input:c.a,useValidation:s.m},t.DefaultLayout=o.a,t._frontmatter=u,t),mdxType:"Playground"},(function(){var e=Object(s.m)([function(e){return e&&""!==e?void 0:"Required"}]),t=e[0],n=e[1];return Object(i.b)(b.a,{mdxType:"Form"},Object(i.b)(c.a,Object(a.a)({type:"text",name:"username",touched:!0,placeholder:"Username"},n,{mdxType:"Input"})),t.error&&Object(i.b)("label",null,t.error))})))}void 0!==m&&m&&m===Object(m)&&Object.isExtensible(m)&&!m.hasOwnProperty("__filemeta")&&Object.defineProperty(m,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"docs/useValidation.mdx"}}),m.isMDXComponent=!0}}]);
//# sourceMappingURL=component---docs-use-validation-mdx-ba3d0c257228f3d58043.js.map