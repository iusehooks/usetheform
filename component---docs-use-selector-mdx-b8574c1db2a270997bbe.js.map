{"version":3,"sources":["webpack:///../docs/useSelector.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Form","CounterReader","Input","type","name","value","placeholder","isMDXComponent"],"mappings":"wSAYaA,G,UAAe,S,sMAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,eADR,eAGA,qBAAG,0BAAYC,WAAW,KAAvB,mCAAH,0FACA,iBAAQ,CACN,GAAM,WADR,WAGA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,oIAOL,yEACA,qBAAG,sBAAQA,WAAW,KAAnB,aAAH,kFACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,iIAKL,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,gKAML,iBAAQ,CACN,GAAM,aADR,aAGA,qBAAG,sBAAQA,WAAW,KAAI,0BAAYA,WAAW,UAAvB,aAA1B,eACA,iBAAQ,CACN,GAAM,WADR,WAGA,qBAAG,sBAAQA,WAAW,KAAI,0BAAYA,WAAW,UAAvB,YAA1B,YACA,gGACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,+EAIL,4BAAW,sBAAQA,WAAW,KAAnB,iBAAX,iDACA,mDACA,sBACE,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,iFACA,mBAAKA,WAAW,MAAK,gCAAMA,WAAW,OAAU,CAC5C,UAAa,wBADI,gHAMvB,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,sBACA,mBAAKA,WAAW,MAAK,gCAAMA,WAAW,OAAU,CAC5C,UAAa,wBADI,2GAOzB,iBAAQ,CACN,GAAM,eADR,eAGA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,8CAIL,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,iHAA0HC,SAAO,GAClKL,QACAH,kBACAS,eACAC,SACAC,kBACAC,WANkK,gBAOlKZ,IAPkK,EAQlKH,eARkK,GASjKO,QAAQ,cACb,YAAC,IAAD,CAAMA,QAAQ,QACZ,YAAC,IAAD,CAAOS,KAAK,SAASC,KAAK,UAAUC,MAAM,IAAIC,YAAY,UAAUZ,QAAQ,UAC5E,YAAC,IAAD,CAAeA,QAAQ,oBAGvB,uBAAK,gCAAMC,WAAW,OAAU,CAC5B,UAAa,wBADZ,wS,oMAkBTJ,EAAWgB,gBAAiB","file":"component---docs-use-selector-mdx-b8574c1db2a270997bbe.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/usetheform/usetheform/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from 'docz';\nimport { Form } from \"./helpers/Form\";\nimport { CounterReader } from \"./helpers/CounterReader\";\nimport { InputLabel as Input } from \"./helpers/InputLabel\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"useselector\"\n    }}>{`useSelector`}</h1>\n    <p><inlineCode parentName=\"p\">{`useSelector(selector: Function)`}</inlineCode>{` allows a user to pick a single \"Field\" from the form state using a selector function.`}</p>\n    <h3 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`function Counter() {\n  const [counter, setCounter] = useSelector(state => state.counter)\n  return <span>{counter}</span>\n}\n`}</code></pre>\n    <p>{`The Counter component will re-render on changes.`}</p>\n    <p><strong parentName=\"p\">{`IMPORTANT`}</strong>{`: Multiple field-selections within the same selector function are not allowed.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// BAD 👎\nconst [counter, setCounter] = useSelector(state => ({ counter1 : state.counter1, counter2 : state.counter2 }));\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// OK 👍   \nconst [counter1, setCounter1] = useSelector(state => state.counter1);\nconst [counter2, setCounter2] = useSelector(state => state.counter2);\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"arguments\"\n    }}>{`Arguments`}</h2>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`selector`}</inlineCode></strong>{`: function `}</p>\n    <h2 {...{\n      \"id\": \"returns\"\n    }}>{`Returns`}</h2>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`helpers`}</inlineCode></strong>{` : array`}</p>\n    <p>{`An array that holds the value of the field and a function to update it.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const [valueField, setFieldValue] = useSelector(state => state.anyprop);\n`}</code></pre>\n    <p>{`The `}<strong parentName=\"p\">{`setFieldValue`}</strong>{` function is used to update the field value. `}</p>\n    <p>{`It accepts as an argument:`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`a function which will receive the previous value and return an updated value.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-javascript\"\n          }}>{`const [valueField, setFieldValue] = useSelector(state => state.anyprop);\nsetFieldValue(prev => ++prev);\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`a new field value.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-javascript\"\n          }}>{`const [valueField, setFieldValue] = useSelector(state => state.anyprop);\nsetFieldValue(newValue);\n`}</code></pre>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import{ Form, Input } from 'usetheform'\n`}</code></pre>\n    <Playground __position={0} __code={'<Form>\\n  <Input type=\\\"number\\\" name=\\\"counter\\\" value=\\\"0\\\" placeholder=\\\"Counter\\\" />\\n  <CounterReader />\\n</Form>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Form,\n      CounterReader,\n      Input,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Form mdxType=\"Form\">\n    <Input type=\"number\" name=\"counter\" value=\"0\" placeholder=\"Counter\" mdxType=\"Input\" />\n    <CounterReader mdxType=\"CounterReader\" />\n  </Form>\n    </Playground>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const CounterReader = () => {\n  const [counter, setCounterValue] = useSelector(state => state.counter);\n  return (\n    <div>\n      <span>{counter}</span>\n      <button type=\"button\" onClick={() => setCounterValue(0)}>\n        Reset Counter\n      </button>\n    </div>\n  );\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}