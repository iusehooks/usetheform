{"version":3,"sources":["webpack:///../docs/Select.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Form","Submit","Select","useValidation","useAsyncValidation","name","value","multiple","reducers","nextValue","prevValue","Number","trim","undefined","status","validation","touched","error","Promise","resolve","reject","setTimeout","asyncStatus","asyncValidation","isMDXComponent"],"mappings":"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","file":"component---docs-select-mdx-13fa99c783bbcab7c68a.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/usetheform/usetheform/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from 'docz';\nimport { Form } from \"./helpers/Form\";\nimport { Submit } from \"./helpers/Submit\";\nimport { Select, useValidation, useAsyncValidation } from './../src';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"select\"\n    }}>{`Select`}</h1>\n    <p>{`The `}<em parentName=\"p\">{`select`}</em>{` element is used to create a drop-down list. `}<br />{`\nIt accepts, as props, any html attribute listed at: `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.w3schools.com/tags/tag_select.asp\"\n      }}>{`Html Select Attributes`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`name`}</inlineCode></strong>{`: string`}</p>\n    <ul>\n      <li parentName=\"ul\">{`A field's name in Usetheform state. `}<br /></li>\n      <li parentName=\"ul\">{`If your Select is rendered within a `}<inlineCode parentName=\"li\">{`<Collection array />`}</inlineCode>{`, `}<strong parentName=\"li\">{`name`}</strong>{` is not allowed as a prop. `}</li>\n    </ul>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`index`}</inlineCode></strong>{`: string`}</p>\n    <ul>\n      <li parentName=\"ul\">{`A field's index in an array Collection. `}<br /></li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`index`}</strong>{` is only allowed if your Select is rendered within a `}<inlineCode parentName=\"li\">{`<Collection array /> `}</inlineCode>{`.`}</li>\n    </ul>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`value`}</inlineCode></strong>{`: string`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Specifies the initial value of a `}<em parentName=\"li\">{`select`}</em>{` element.`}</li>\n    </ul>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`touched`}</inlineCode></strong>{`: boolean`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`A field that has been touched/visited. Default value of `}<em parentName=\"p\">{`false`}</em>{`. `}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`If `}<em parentName=\"p\">{`true`}</em>{`, validation messages (sync and async) will be shown but only when the event onBlur of the field is triggered by a user action.`}</p>\n      </li>\n    </ul>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`multiple`}</inlineCode></strong>{`: boolean`}</p>\n    <ul>\n      <li parentName=\"ul\">{`When present, it specifies that multiple options can be selected at once. Default value of `}<em parentName=\"li\">{`false`}</em>{`. `}</li>\n    </ul>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`reducers`}</inlineCode></strong>{`: array | function`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`(nextValue, prevValue, formState) => nextValue\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`An array whose values correspond to different reducing functions.`}</li>\n      <li parentName=\"ul\">{`Reducer functions specify how the Select's value changes.`}</li>\n    </ul>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`innerRef`}</inlineCode></strong>{`: object (a mutable ref object)`}</p>\n    <ul>\n      <li parentName=\"ul\">{`When you need to access the underlying DOM node created by Select (e.g. to call focus), you can use a ref to store a reference to the select dom node.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const ref = useRef(null)\n<Select innerRef={ref} name=\"test\">...options...</Select>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <h3 {...{\n      \"id\": \"single-options\"\n    }}>{`Single options`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`  import { Form, Select } from 'usetheform'\n`}</code></pre>\n    <Playground __position={0} __code={'<Form>\\n  <Select name=\\\"select\\\">\\n    <option value=\\\"\\\">Select an option</option>\\n    <option value=\\\"1\\\">1</option>\\n    <option value=\\\"2\\\">2</option>\\n    <option value=\\\"3\\\">3</option>\\n    <option value=\\\"4\\\">4</option>\\n  </Select>\\n</Form>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Form,\n      Submit,\n      Select,\n      useValidation,\n      useAsyncValidation,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Form mdxType=\"Form\">\n    <Select name=\"select\" mdxType=\"Select\">\n      <option value=\"\">Select an option</option>\n      <option value=\"1\">1</option>\n      <option value=\"2\">2</option>\n      <option value=\"3\">3</option>\n      <option value=\"4\">4</option>\n    </Select>\n  </Form>\n    </Playground>\n    <h3 {...{\n      \"id\": \"multiple-options\"\n    }}>{`Multiple options`}</h3>\n    <Playground __position={1} __code={'<Form>\\n  <Select name=\\\"select\\\" multiple>\\n    <option value=\\\"1\\\">1</option>\\n    <option value=\\\"2\\\">2</option>\\n    <option value=\\\"3\\\">3</option>\\n    <option value=\\\"4\\\">4</option>\\n  </Select>\\n</Form>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Form,\n      Submit,\n      Select,\n      useValidation,\n      useAsyncValidation,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Form mdxType=\"Form\">\n    <Select name=\"select\" multiple mdxType=\"Select\">\n      <option value=\"1\">1</option>\n      <option value=\"2\">2</option>\n      <option value=\"3\">3</option>\n      <option value=\"4\">4</option>\n    </Select>\n  </Form>\n    </Playground>\n    <h2 {...{\n      \"id\": \"reducers\"\n    }}>{`Reducers`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`  import { Form, Select } from 'usetheform'\n`}</code></pre>\n    <Playground __position={2} __code={'() => {\\n  const tenIfEven = (nextValue, prevValue) =>\\n    nextValue !== \\'\\' && Number(nextValue) % 2 === 0 ? \\'10\\' : nextValue\\n  const elevenIfOdd = (nextValue, prevValue) =>\\n    nextValue !== \\'\\' && Number(nextValue) % 2 !== 0 ? \\'11\\' : nextValue\\n  return (\\n    <Form>\\n      <Select name=\\\"select\\\" reducers={[tenIfEven, elevenIfOdd]}>\\n        <option value=\\\"\\\">Select an option</option>\\n        <option value=\\\"1\\\">1</option>\\n        <option value=\\\"2\\\">2</option>\\n        <option value=\\\"3\\\">3</option>\\n        <option value=\\\"4\\\">4</option>\\n        <option value=\\\"10\\\">10</option>\\n        <option value=\\\"11\\\">11</option>\\n      </Select>\\n    </Form>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Form,\n      Submit,\n      Select,\n      useValidation,\n      useAsyncValidation,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        const tenIfEven = (nextValue, prevValue) => nextValue !== \"\" && Number(nextValue) % 2 === 0 ? \"10\" : nextValue;\n\n        const elevenIfOdd = (nextValue, prevValue) => nextValue !== \"\" && Number(nextValue) % 2 !== 0 ? \"11\" : nextValue;\n\n        return <Form mdxType=\"Form\">\n        <Select name=\"select\" reducers={[tenIfEven, elevenIfOdd]} mdxType=\"Select\">\n          <option value=\"\">Select an option</option>\n          <option value=\"1\">1</option>\n          <option value=\"2\">2</option>\n          <option value=\"3\">3</option>\n          <option value=\"4\">4</option>\n          <option value=\"10\">10</option>\n          <option value=\"11\">11</option>\n        </Select>\n      </Form>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"validation---sync\"\n    }}>{`Validation - Sync`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`  import { useValidation } from 'usetheform'\n`}</code></pre>\n    <Playground __position={3} __code={'() => {\\n  const required = value =>\\n    value && value.trim() !== \\'\\' ? undefined : \\'Required\\'\\n  const [status, validation] = useValidation([required])\\n  return (\\n    <Form>\\n      <Select name=\\\"selectRequired\\\" touched {...validation}>\\n        <option value=\\\"\\\">Select an option</option>\\n        <option value=\\\"1\\\">1</option>\\n        <option value=\\\"2\\\">2</option>\\n        <option value=\\\"3\\\">3</option>\\n        <option value=\\\"4\\\">4</option>\\n      </Select>\\n      {status.error && <label>{status.error}</label>}\\n    </Form>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Form,\n      Submit,\n      Select,\n      useValidation,\n      useAsyncValidation,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        const required = value => value && value.trim() !== \"\" ? undefined : \"Required\";\n\n        const [status, validation] = useValidation([required]);\n        return <Form mdxType=\"Form\">\n        <Select name=\"selectRequired\" touched {...validation} mdxType=\"Select\">\n          <option value=\"\">Select an option</option>\n          <option value=\"1\">1</option>\n          <option value=\"2\">2</option>\n          <option value=\"3\">3</option>\n          <option value=\"4\">4</option>\n        </Select>\n        {status.error && <label>{status.error}</label>}\n      </Form>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"validation---async\"\n    }}>{`Validation - Async`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import { useAsyncValidation, useForm } from 'usetheform'\n\nconst Submit = () => {\n  const { isValid } = useForm();\n  return (\n    <button disabled={!isValid} type=\"submit\">\n      Submit\n    </button>\n  );\n};\n\n`}</code></pre>\n    <Playground __position={4} __code={'() => {\\n  const asyncTest = value =>\\n    new Promise((resolve, reject) => {\\n      // it could be an API call or any async operation\\n      setTimeout(() => {\\n        if (value !== \\'3\\') {\\n          reject(\\'Selection not valid\\')\\n        } else {\\n          resolve(\\'Success\\')\\n        }\\n      }, 1000)\\n    })\\n  const [asyncStatus, asyncValidation] = useAsyncValidation(asyncTest)\\n  return (\\n    <Form>\\n      <Select name=\\\"selectRequired\\\" touched {...asyncValidation}>\\n        <option value=\\\"\\\">Select an option</option>\\n        <option value=\\\"1\\\">1</option>\\n        <option value=\\\"2\\\">2</option>\\n        <option value=\\\"3\\\">3</option>\\n      </Select>\\n      {asyncStatus.status === undefined && (\\n        <label>Async Check Not Started Yet</label>\\n      )}\\n      {asyncStatus.status === \\'asyncStart\\' && <label>Checking...</label>}\\n      {asyncStatus.status === \\'asyncError\\' && (\\n        <label>{asyncStatus.value}</label>\\n      )}\\n      {asyncStatus.status === \\'asyncSuccess\\' && (\\n        <label>{asyncStatus.value}</label>\\n      )}\\n      <Submit />\\n    </Form>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Form,\n      Submit,\n      Select,\n      useValidation,\n      useAsyncValidation,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        const asyncTest = value => new Promise((resolve, reject) => {\n          // it could be an API call or any async operation\n          setTimeout(() => {\n            if (value !== \"3\") {\n              reject(\"Selection not valid\");\n            } else {\n              resolve(\"Success\");\n            }\n          }, 1000);\n        });\n\n        const [asyncStatus, asyncValidation] = useAsyncValidation(asyncTest);\n        return <Form mdxType=\"Form\">\n         <Select name=\"selectRequired\" touched {...asyncValidation} mdxType=\"Select\">\n          <option value=\"\">Select an option</option>\n          <option value=\"1\">1</option>\n          <option value=\"2\">2</option>\n          <option value=\"3\">3</option>\n        </Select>\n        {asyncStatus.status === undefined && <label>Async Check Not Started Yet</label>}\n        {asyncStatus.status === \"asyncStart\" && <label>Checking...</label>}\n        {asyncStatus.status === \"asyncError\" && <label>{asyncStatus.value}</label>}\n        {asyncStatus.status === \"asyncSuccess\" && <label>{asyncStatus.value}</label>}\n        <Submit mdxType=\"Submit\" />\n      </Form>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}