{"version":3,"sources":["webpack:///../docs/useAsyncValidation.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Form","Input","useAsyncValidation","value","Promise","resolve","reject","setTimeout","length","asyncStatus","validationProps","type","name","touched","placeholder","undefined","status","isMDXComponent"],"mappings":"wSAYaA,G,UAAe,S,6MAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,sBADR,sBAGA,qBAAG,0BAAYC,WAAW,KAAvB,2CAAH,sDACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,2EAIL,iBAAQ,CACN,GAAM,aADR,aAGA,qBAAG,sBAAQA,WAAW,KAAI,0BAAYA,WAAW,UAAvB,cAA1B,cACA,sBACE,kBAAIA,WAAW,MAAf,4EAEF,iBAAQ,CACN,GAAM,WADR,WAGA,yBAAQ,sBAAQA,WAAW,KAAI,0BAAYA,WAAW,UAAvB,yBAA/B,YACA,6CACA,sBACE,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAK,sBAAQA,WAAW,KAAI,0BAAYA,WAAW,UAAvB,gBAA1C,YACA,kBAAIA,WAAW,MACb,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,0CAA8D,0BAAYA,WAAW,KAAvB,UAA9D,qBAAsI,0BAAYA,WAAW,KAAvB,SAAtI,MAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAK,sBAAQA,WAAW,KAAI,0BAAYA,WAAW,UAAvB,WAA1C,mCACA,kBAAIA,WAAW,MACb,kBAAIA,WAAW,MAAf,oDACA,kBAAIA,WAAW,MAAf,+CACA,kBAAIA,WAAW,MAAf,+DACA,kBAAIA,WAAW,MAAf,kDAGJ,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAK,sBAAQA,WAAW,KAAI,0BAAYA,WAAW,UAAvB,UAA1C,6CAIN,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAK,sBAAQA,WAAW,KAAI,0BAAYA,WAAW,UAAvB,wBAA1C,YACA,kBAAIA,WAAW,MACb,kBAAIA,WAAW,MAAf,sFAIN,iBAAQ,CACN,GAAM,eADR,eAGA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,qEAIL,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,i3BAA43BC,SAAO,GACp6BL,QACAH,kBACAS,eACAC,SACAC,UACAC,wBANo6B,gBAOp6BZ,IAPo6B,EAQp6BH,eARo6B,GASn6BO,QAAQ,eACR,WACC,IADK,EASkCQ,aARrB,SAAAC,GAAK,OAAI,IAAIC,SAAQ,SAACC,EAASC,GAC/CC,YAAW,WACLJ,EAAMK,QAAU,EAClBF,EAAO,SACFD,EAAQ,aACd,YAGEI,EATF,KASeC,EATf,KAUL,OAAO,YAAC,IAAD,CAAMhB,QAAQ,QACrB,YAAC,IAAD,aAAOiB,KAAK,OAAOC,KAAK,OAAOC,SAAO,EAACC,YAAY,QAAWJ,EAA9D,CAA+EhB,QAAQ,gBAC/DqB,IAAvBN,EAAYO,QAAwB,wDACb,eAAvBP,EAAYO,QAA2B,wCAChB,eAAvBP,EAAYO,QAA2B,yBAAQP,EAAYN,OACpC,iBAAvBM,EAAYO,QAA6B,yBAAQP,EAAYN,iB,2MAQtEZ,EAAW0B,gBAAiB","file":"component---docs-use-async-validation-mdx-eaa00809c0f5aa7be0f3.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/usetheform/usetheform/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from 'docz';\nimport { Form } from \"./helpers/Form\";\nimport { InputLabel as Input } from \"./helpers/InputLabel\";\nimport { useAsyncValidation } from './../src';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"useasyncvalidation\"\n    }}>{`useAsyncValidation`}</h1>\n    <p><inlineCode parentName=\"p\">{`useAsyncValidation(validator: Function)`}</inlineCode>{` provides the async validation logic to any Field.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`  const [asyncStatus, validationAsyncAttr] = useAsyncValidation(fn);\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"arguments\"\n    }}>{`Arguments`}</h2>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`validator`}</inlineCode></strong>{`: function`}</p>\n    <ul>\n      <li parentName=\"ul\">{`A function which receives the value of the field and returns a promise.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"returns\"\n    }}>{`Returns`}</h2>\n    <p>{`(`}<strong parentName=\"p\"><inlineCode parentName=\"strong\">{`validationAsyncProps`}</inlineCode></strong>{`): array`}</p>\n    <p>{`An array that holds:`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`asyncStatus`}</inlineCode></strong>{`: object`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`A plain object that holds a prop named `}<inlineCode parentName=\"p\">{`status`}</inlineCode>{` and a prop named `}<inlineCode parentName=\"p\">{`value`}</inlineCode>{`.`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`status`}</inlineCode></strong>{` might be one of the following:`}</p>\n            <ul parentName=\"li\">\n              <li parentName=\"ul\">{`\"undefined\" : async validation did not start yet`}</li>\n              <li parentName=\"ul\">{`\"asyncStart\" : async validation has started`}</li>\n              <li parentName=\"ul\">{`\"asyncSuccess\" : the promise has been resolved with success`}</li>\n              <li parentName=\"ul\">{`\"asyncError\" : the promise has been rejected`}</li>\n            </ul>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`value`}</inlineCode></strong>{` is the value returned by the promise `}</p>\n          </li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`validationAsyncAttr`}</inlineCode></strong>{`: object`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`A plain object which contains all the props that must be spreaded to the Field.`}</li>\n        </ul>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`  import { Form, Input, useAsyncValidation } from 'usetheform'\n`}</code></pre>\n    <Playground __position={0} __code={'() => {\\n  const asyncTest = value =>\\n    new Promise((resolve, reject) => {\\n      setTimeout(() => {\\n        if (value.length <= 3) {\\n          reject(\\'Error\\')\\n        } else resolve(\\'Success\\')\\n      }, 1500)\\n    })\\n  const [asyncStatus, validationProps] = useAsyncValidation(asyncTest)\\n  return (\\n    <Form>\\n      <Input\\n        type=\\\"text\\\"\\n        name=\\\"name\\\"\\n        touched\\n        placeholder=\\\"Name\\\"\\n        {...validationProps}\\n      />\\n      {asyncStatus.status === undefined && (\\n        <label>Async Check Not Started Yet</label>\\n      )}\\n      {asyncStatus.status === \\'asyncStart\\' && <label>Checking...</label>}\\n      {asyncStatus.status === \\'asyncError\\' && (\\n        <label>{asyncStatus.value}</label>\\n      )}\\n      {asyncStatus.status === \\'asyncSuccess\\' && (\\n        <label>{asyncStatus.value}</label>\\n      )}\\n    </Form>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Form,\n      Input,\n      useAsyncValidation,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        const asyncTest = value => new Promise((resolve, reject) => {\n          setTimeout(() => {\n            if (value.length <= 3) {\n              reject(\"Error\");\n            } else resolve(\"Success\");\n          }, 1500);\n        });\n\n        const [asyncStatus, validationProps] = useAsyncValidation(asyncTest);\n        return <Form mdxType=\"Form\">\n        <Input type=\"text\" name=\"name\" touched placeholder=\"Name\" {...validationProps} mdxType=\"Input\" />\n        {asyncStatus.status === undefined && <label>Async Check Not Started Yet</label>}\n        {asyncStatus.status === \"asyncStart\" && <label>Checking...</label>}\n        {asyncStatus.status === \"asyncError\" && <label>{asyncStatus.value}</label>}\n        {asyncStatus.status === \"asyncSuccess\" && <label>{asyncStatus.value}</label>}\n      </Form>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}