{"version":3,"sources":["webpack:///../docs/PersistStateOnUnmount.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","useState","Form","Input","PersistStateOnUnmount","Collection","visible","toggle","object","name","type","value","onClick","prev","isMDXComponent"],"mappings":"0SAaaA,G,UAAe,S,gNAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,yBADR,yBAGA,2BAAU,0BAAYC,WAAW,KAAvB,cAAV,kHACmC,0BAAYA,WAAW,KAAvB,6BADnC,+CAEA,iBAAQ,CACN,GAAM,eADR,eAGA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,wEAIL,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,iiBAAsjBC,SAAO,GAC9lBL,QACAH,kBACAS,eACAC,oBACAC,SACAC,UACAC,0BACAC,gBAR8lB,gBAS9lBd,IAT8lB,EAU9lBH,eAV8lB,GAW7lBO,QAAQ,eACR,WAAM,MACqBM,oBAAS,GAA5BK,EADF,KACWC,EADX,KAEL,OAAO,YAAC,IAAD,CAAMZ,QAAQ,QACvB,YAAC,IAAD,CAAuBA,QAAQ,0BAC3BW,GAAW,YAAC,IAAD,CAAYE,QAAM,EAACC,KAAK,OAAOd,QAAQ,cAChD,YAAC,IAAD,CAAOe,KAAK,OAAOD,KAAK,OAAOE,MAAM,MAAMhB,QAAQ,UACnD,YAAC,IAAD,CAAOe,KAAK,OAAOD,KAAK,WAAWE,MAAM,MAAMhB,QAAQ,WAE3D,YAAC,IAAD,CAAOe,KAAK,OAAOD,KAAK,QAAQd,QAAQ,WAE1C,sBAAQe,KAAK,SAASE,QAAS,kBAAML,GAAO,SAAAM,GAAI,OAAKA,OAArD,+B,8MAQNrB,EAAWsB,gBAAiB","file":"component---docs-persist-state-on-unmount-mdx-f62a566874a34279f44e.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/usetheform/usetheform/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from 'docz';\nimport { useState } from \"react\";\nimport { Form } from \"./helpers/Form\";\nimport { InputLabel as Input } from \"./helpers/InputLabel\";\nimport { PersistStateOnUnmount, Collection } from './../src';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"persiststateonunmount\"\n    }}>{`PersistStateOnUnmount`}</h1>\n    <p>{`In `}<inlineCode parentName=\"p\">{`usetheform`}</inlineCode>{` if a Field gets unmounted its value within the Form state gets cleared.\nWrap your Field elements between the `}<inlineCode parentName=\"p\">{`<PersistStateOnUnmount />`}</inlineCode>{` component to preserve the Fields values.\t`}</p>\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`  import { Form, PersistStateOnUnmount, Input } from 'usetheform'\n`}</code></pre>\n    <Playground __position={0} __code={'() => {\\n  const [visible, toggle] = useState(false)\\n  return (\\n    <Form>\\n      <PersistStateOnUnmount>\\n        {!visible && (\\n          <Collection object name=\\\"user\\\">\\n            <Input type=\\\"text\\\" name=\\\"name\\\" value=\\\"abc\\\" />\\n            <Input type=\\\"text\\\" name=\\\"lastname\\\" value=\\\"foo\\\" />\\n          </Collection>\\n        )}\\n        <Input type=\\\"text\\\" name=\\\"other\\\" />\\n      </PersistStateOnUnmount>\\n      <button type=\\\"button\\\" onClick={() => toggle(prev => !prev)}>\\n        Toggle Collection\\n      </button>\\n    </Form>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      useState,\n      Form,\n      Input,\n      PersistStateOnUnmount,\n      Collection,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        const [visible, toggle] = useState(false);\n        return <Form mdxType=\"Form\">\n      <PersistStateOnUnmount mdxType=\"PersistStateOnUnmount\">\n        {!visible && <Collection object name=\"user\" mdxType=\"Collection\">\n            <Input type=\"text\" name=\"name\" value=\"abc\" mdxType=\"Input\" />\n            <Input type=\"text\" name=\"lastname\" value=\"foo\" mdxType=\"Input\" />\n          </Collection>}\n        <Input type=\"text\" name=\"other\" mdxType=\"Input\" />\n      </PersistStateOnUnmount>\n      <button type=\"button\" onClick={() => toggle(prev => !prev)}>Toggle Collection</button>\n    </Form>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}