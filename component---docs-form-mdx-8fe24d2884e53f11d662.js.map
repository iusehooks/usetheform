{"version":3,"sources":["webpack:///../docs/Form.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Form","Submit","asyncTestForm","Input","Item","reduceTotalPrice","reduceTotalQuantity","useValidation","useAsyncValidation","Collection","initialState","name","gender","option1","onInit","state","isFormValid","console","log","onChange","onSubmit","alert","JSON","stringify","type","placeholder","value","checked","reducers","array","price","desc","readOnly","values","undefined","status","validationProps","touched","object","error","asyncStatus","isMDXComponent"],"mappings":"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","file":"component---docs-form-mdx-8fe24d2884e53f11d662.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/usetheform/usetheform/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from 'docz';\nimport { Form } from \"./helpers/Form\";\nimport { Submit } from \"./helpers/Submit\";\nimport { asyncTestForm } from \"./helpers/utils/index.js\";\nimport { InputLabel as Input } from \"./helpers/InputLabel\";\nimport { Item, reduceTotalPrice, reduceTotalQuantity } from \"./helpers/Item\";\nimport { useValidation, useAsyncValidation, Collection } from './../src';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"form\"\n    }}>{`Form`}</h1>\n    <p>{`The Form is the most important component in usetheform. It renders all the Fields and keeps the entire form state synchronized.`}</p>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`onInit`}</inlineCode></strong>{`: function`}</p>\n    <ul>\n      <li parentName=\"ul\">{`A function invoked when the Form is initialized.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const onInit = (formState, isFormValid) => { // some operation }\n`}</code></pre>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`onChange`}</inlineCode></strong>{`: function`}</p>\n    <ul>\n      <li parentName=\"ul\">{`A function invoked when any Form Field changes its value.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const onChange = (formState, isFormValid) => { // some operation }\n`}</code></pre>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`onReset`}</inlineCode></strong>{`: function`}</p>\n    <ul>\n      <li parentName=\"ul\">{`A function invoked when the form has been reset to its initial state.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const onReset = (formState, isFormValid) => { // some operation }\n`}</code></pre>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`onSubmit`}</inlineCode></strong>{`: function`}</p>\n    <ul>\n      <li parentName=\"ul\">{`A function invoked when the submit button has been pressed. `}</li>\n      <li parentName=\"ul\">{`The function may return either a Promise or a boolean value of true/false.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const onSubmit = (formState) => { // some operation };\nconst onSubmit = (formState) => new Promise((resolve, reject) => { // some async operation  });\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`Cases:`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`If the function returns a Promise which is resolved, it will increment the value named `}<strong parentName=\"li\">{`submitted`}</strong>{`.`}</li>\n          <li parentName=\"ul\">{`If the function returns a boolean value `}<inlineCode parentName=\"li\">{`true`}</inlineCode>{` or no return at all, it will increment the value named `}<strong parentName=\"li\">{`submitted`}</strong>{`.`}</li>\n          <li parentName=\"ul\">{`If the function returns a Promise which is rejected, the value named `}<strong parentName=\"li\">{`submitted`}</strong>{` will not be incremented.`}</li>\n          <li parentName=\"ul\">{`If the function returns a boolean value `}<inlineCode parentName=\"li\">{`false`}</inlineCode>{`, the value named `}<strong parentName=\"li\">{`submitted`}</strong>{` will not be incremented.`}</li>\n        </ul>\n      </li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`  const { submitted, submitAttempts } = useForm();\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`It will be only invoked if the form passes all the validations added at any level (Collections or Fields).`}</li>\n      <li parentName=\"ul\">{`For each invocation, the value `}<strong parentName=\"li\">{`submitAttempts`}</strong>{` will be incremented.`}</li>\n    </ul>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`initialState`}</inlineCode></strong>{`: object`}</p>\n    <ul>\n      <li parentName=\"ul\">{`It is a plain object that represents the initial state of the form.`}</li>\n    </ul>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`reducers`}</inlineCode></strong>{`: array | function`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`(nextState, prevState) => nextState\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`An array whose values correspond to different reducing functions.`}</li>\n      <li parentName=\"ul\">{`Reducer functions specify how the Form's state changes.`}</li>\n    </ul>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`touched`}</inlineCode></strong>{`: boolean`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Default value of `}<em parentName=\"p\">{`false`}</em>{`. `}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`If `}<em parentName=\"p\">{`true`}</em>{`, sync validation messages will be shown only when the event onBlur of any forms's field is triggered by the user action at any level of nesting.`}</p>\n      </li>\n    </ul>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`action`}</inlineCode></strong>{`: string`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`The action attribute specifies where to send the form-data when a form is submitted.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Possible values:`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`An absolute URL - points to another web site (like action=\"`}<a parentName=\"li\" {...{\n              \"href\": \"http://www.example.com/example.html%22\"\n            }}>{`http://www.example.com/example.html\"`}</a>{`)`}</li>\n          <li parentName=\"ul\">{`A relative URL - points to a file within a web site (like action=\"example.html\")`}</li>\n        </ul>\n      </li>\n    </ul>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`innerRef`}</inlineCode></strong>{`: object (a mutable ref object)`}</p>\n    <ul>\n      <li parentName=\"ul\">{`When you need to access the underlying DOM node created by Form (e.g. to call focus), you can use a ref to store a reference to the form dom node.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const ref = useRef(null)\n<Form innerRef={ref} name=\"form\">...fields...</Form>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <h3 {...{\n      \"id\": \"example-1\"\n    }}>{`Example 1`}</h3>\n    <p>{`A simple form with the initial state passed as Form prop.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`  import { Form, Input } from 'usetheform'\n`}</code></pre>\n    <Playground __position={0} __code={'<Form\\n  initialState={{ name: \\'foo\\', gender: \\'M\\', option1: true }}\\n  onInit={(state, isFormValid) => console.log(\\'INIT\\', state, isFormValid)}\\n  onChange={(state, isFormValid) => console.log(\\'CHANGE\\', state, isFormValid)}\\n  onSubmit={state => alert(JSON.stringify(state))}\\n>\\n  <Input type=\\\"text\\\" name=\\\"name\\\" placeholder=\\\"Name\\\" />\\n  <Input type=\\\"radio\\\" name=\\\"gender\\\" value=\\\"M\\\" placeholder=\\\"M\\\" />\\n  <Input type=\\\"radio\\\" name=\\\"gender\\\" value=\\\"F\\\" placeholder=\\\"F\\\" />\\n  <Input type=\\\"radio\\\" name=\\\"gender\\\" value=\\\"Other\\\" placeholder=\\\"Other\\\" />\\n  <Input type=\\\"checkbox\\\" name=\\\"option1\\\" placeholder=\\\"Option 1\\\" />\\n  <Input type=\\\"checkbox\\\" name=\\\"option2\\\" placeholder=\\\"Option 2\\\" />\\n  <button type=\\\"submit\\\">Submit</button>\\n</Form>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Form,\n      Submit,\n      asyncTestForm,\n      Input,\n      Item,\n      reduceTotalPrice,\n      reduceTotalQuantity,\n      useValidation,\n      useAsyncValidation,\n      Collection,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Form initialState={{\n        name: \"foo\",\n        gender: \"M\",\n        option1: true\n      }} onInit={(state, isFormValid) => console.log(\"INIT\", state, isFormValid)} onChange={(state, isFormValid) => console.log(\"CHANGE\", state, isFormValid)} onSubmit={state => alert(JSON.stringify(state))} mdxType=\"Form\">\n    <Input type=\"text\" name=\"name\" placeholder=\"Name\" mdxType=\"Input\" />\n    <Input type=\"radio\" name=\"gender\" value=\"M\" placeholder=\"M\" mdxType=\"Input\" />\n    <Input type=\"radio\" name=\"gender\" value=\"F\" placeholder=\"F\" mdxType=\"Input\" />\n    <Input type=\"radio\" name=\"gender\" value=\"Other\" placeholder=\"Other\" mdxType=\"Input\" />\n    <Input type=\"checkbox\" name=\"option1\" placeholder=\"Option 1\" mdxType=\"Input\" />\n    <Input type=\"checkbox\" name=\"option2\" placeholder=\"Option 2\" mdxType=\"Input\" />\n    <button type=\"submit\">Submit</button>\n  </Form>\n    </Playground>\n    <h3 {...{\n      \"id\": \"example-2\"\n    }}>{`Example 2`}</h3>\n    <p>{`A simple form with the initial state passed straight to the Form's Field.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`  import { Form, Input } from 'usetheform'\n`}</code></pre>\n    <Playground __position={1} __code={'<Form\\n  onInit={(state, isFormValid) => console.log(\\'INIT\\', state, isFormValid)}\\n  onChange={(state, isFormValid) => console.log(\\'CHANGE\\', state, isFormValid)}\\n  onSubmit={state => alert(JSON.stringify(state))}\\n>\\n  <Input type=\\\"text\\\" name=\\\"name\\\" value=\\\"foo\\\" placeholder=\\\"Name\\\" />\\n  <Input type=\\\"radio\\\" name=\\\"gender\\\" value=\\\"M\\\" checked placeholder=\\\"M\\\" />\\n  <Input type=\\\"radio\\\" name=\\\"gender\\\" value=\\\"F\\\" placeholder=\\\"F\\\" />\\n  <Input type=\\\"radio\\\" name=\\\"gender\\\" value=\\\"Other\\\" placeholder=\\\"Other\\\" />\\n  <Input type=\\\"checkbox\\\" name=\\\"option1\\\" checked placeholder=\\\"Option 1\\\" />\\n  <Input type=\\\"checkbox\\\" name=\\\"option2\\\" placeholder=\\\"Option 2\\\" />\\n  <button type=\\\"submit\\\">Submit</button>\\n</Form>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Form,\n      Submit,\n      asyncTestForm,\n      Input,\n      Item,\n      reduceTotalPrice,\n      reduceTotalQuantity,\n      useValidation,\n      useAsyncValidation,\n      Collection,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Form onInit={(state, isFormValid) => console.log(\"INIT\", state, isFormValid)} onChange={(state, isFormValid) => console.log(\"CHANGE\", state, isFormValid)} onSubmit={state => alert(JSON.stringify(state))} mdxType=\"Form\">\n    <Input type=\"text\" name=\"name\" value=\"foo\" placeholder=\"Name\" mdxType=\"Input\" />\n    <Input type=\"radio\" name=\"gender\" value=\"M\" checked placeholder=\"M\" mdxType=\"Input\" />\n    <Input type=\"radio\" name=\"gender\" value=\"F\" placeholder=\"F\" mdxType=\"Input\" />\n    <Input type=\"radio\" name=\"gender\" value=\"Other\" placeholder=\"Other\" mdxType=\"Input\" />\n    <Input type=\"checkbox\" name=\"option1\" checked placeholder=\"Option 1\" mdxType=\"Input\" />\n    <Input type=\"checkbox\" name=\"option2\" placeholder=\"Option 2\" mdxType=\"Input\" />\n    <button type=\"submit\">Submit</button>\n  </Form>\n    </Playground>\n    <h2 {...{\n      \"id\": \"reducers\"\n    }}>{`Reducers`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import { Form, Collection } from 'usetheform';\nimport { Item } from './components/Item';\nimport { reduceTotalPrice,reduceTotalQuantity } from './components/Item/utils';\n`}</code></pre>\n    <Playground __position={2} __code={'<Form reducers={[reduceTotalPrice, reduceTotalQuantity]}>\\n  <Collection array name=\\\"items\\\">\\n    <Item price={5} desc=\\\"White Shoes\\\" />\\n    <Item price={3} desc=\\\"Red Bag\\\" />\\n    <Item price={6} desc=\\\"Blue Trouser\\\" />\\n    {/* try to copy and paste a new item within the items Collection */}\\n  </Collection>\\n  <Input\\n    type=\\\"number\\\"\\n    name=\\\"totalPrice\\\"\\n    readOnly\\n    placeholder=\\\"Total Price $\\\"\\n  />\\n  <Input\\n    type=\\\"number\\\"\\n    name=\\\"totalQuantity\\\"\\n    readOnly\\n    placeholder=\\\"Total Quantity\\\"\\n  />\\n</Form>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Form,\n      Submit,\n      asyncTestForm,\n      Input,\n      Item,\n      reduceTotalPrice,\n      reduceTotalQuantity,\n      useValidation,\n      useAsyncValidation,\n      Collection,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Form reducers={[reduceTotalPrice, reduceTotalQuantity]} mdxType=\"Form\">\n    <Collection array name=\"items\" mdxType=\"Collection\">\n      <Item price={5} desc=\"White Shoes\" mdxType=\"Item\" />\n      <Item price={3} desc=\"Red Bag\" mdxType=\"Item\" /> \n      <Item price={6} desc=\"Blue Trouser\" mdxType=\"Item\" />\n      {\n            /* try to copy and paste a new item within the items Collection */\n          }\n    </Collection>\n    <Input type=\"number\" name=\"totalPrice\" readOnly placeholder=\"Total Price $\" mdxType=\"Input\" />\n    <Input type=\"number\" name=\"totalQuantity\" readOnly placeholder=\"Total Quantity\" mdxType=\"Input\" />\n  </Form>\n    </Playground>\n    <h4 {...{\n      \"id\": \"detailed-explanation\"\n    }}>{`Detailed Explanation:`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`export const Item = ({ price, qty, desc }) => {\n  return (\n    <Collection object>\n      <Input type=\"number\" name=\"price\" placeholder=\"Price\" min={1} value={price} />\n      <Input type=\"number\" name=\"qty\" placeholder=\"Quantity\" min={1} value={qty} />\n      <Input type=\"text\" name=\"description\" placeholder=\"Description\" value={desc} />\n    </Collection>\n  );\n}\n\nexport const reduceTotalPrice = formState => {\n  const { items = [] } = formState;\n  const totalPrice = items.reduce((total, { price = 0, qty = 0 }) => {\n    total += price * qty;\n    return total;\n  }, 0);\n  return { ...formState, totalPrice };\n};\n\nexport const reduceTotalQuantity = (formState) => { \n  const { items = [] } = formState;\n  const totalQuantity = items.reduce((total, { qty = 0 }) => {\n    total += qty;\n    return total;\n  }, 0);\n  return { ...formState, totalQuantity };\n}; \n`}</code></pre>\n    <h2 {...{\n      \"id\": \"validation---sync\"\n    }}>{`Validation - Sync`}</h2>\n    <p>{`Validation at Form level:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`touched=false`}</strong>{`: error messages will be shown on Form initialization and when any Field is edited.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`touched=true`}</strong>{`: error messages will be shown when any Field at any level of nesting is touched/visited.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`  import { Form, Input, Collection, useValidation } from 'usetheform'\n`}</code></pre>\n    <Playground __position={3} __code={'() => {\\n  const graterThan10 = ({ values }) =>\\n    values && values[\\'A\\'] + values[\\'B\\'] > 10 ? undefined : \\'A+B must be > 10\\'\\n  const [status, validationProps] = useValidation([graterThan10])\\n  return (\\n    <Form touched {...validationProps}>\\n      <Collection object name=\\\"values\\\">\\n        <Input type=\\\"number\\\" name=\\\"A\\\" placeholder=\\\"Number A\\\" value=\\\"1\\\" />\\n        <Input type=\\\"number\\\" name=\\\"B\\\" placeholder=\\\"Number B\\\" value=\\\"2\\\" />\\n      </Collection>\\n      {status.error && <label>{status.error}</label>}\\n      <button type=\\\"submit\\\">Press to see results</button>\\n    </Form>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Form,\n      Submit,\n      asyncTestForm,\n      Input,\n      Item,\n      reduceTotalPrice,\n      reduceTotalQuantity,\n      useValidation,\n      useAsyncValidation,\n      Collection,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        const graterThan10 = ({\n          values\n        }) => values && values[\"A\"] + values[\"B\"] > 10 ? undefined : \"A+B must be > 10\";\n\n        const [status, validationProps] = useValidation([graterThan10]);\n        return <Form touched {...validationProps} mdxType=\"Form\">\n        <Collection object name=\"values\" mdxType=\"Collection\">\n          <Input type=\"number\" name=\"A\" placeholder=\"Number A\" value=\"1\" mdxType=\"Input\" />\n          <Input type=\"number\" name=\"B\" placeholder=\"Number B\" value=\"2\" mdxType=\"Input\" />\n        </Collection>\n        {status.error && <label>{status.error}</label>}\n        <button type=\"submit\">Press to see results</button>\n      </Form>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"validation---async\"\n    }}>{`Validation - Async`}</h2>\n    <p>{`Async Validation for `}<strong parentName=\"p\">{`Form`}</strong>{` is triggered on Submit event. The form submission is prevented if the validation fails.\nIt means that the onSubmit function passed as prop to the `}<strong parentName=\"p\">{`Form`}</strong>{` component will not be invoked.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import { Form, Collection, Input, useAsyncValidation } from 'usetheform';\n`}</code></pre>\n    <Playground __position={4} __code={'() => {\\n  const [asyncStatus, validationProps] = useAsyncValidation(asyncTestForm)\\n  const onSubmit = state => alert(JSON.stringify(state))\\n  return (\\n    <Form onSubmit={onSubmit} {...validationProps}>\\n      <Collection object name=\\\"values\\\">\\n        <Input type=\\\"number\\\" name=\\\"a\\\" placeholder=\\\"Number A\\\" value=\\\"1\\\" />\\n        <Input type=\\\"number\\\" name=\\\"b\\\" placeholder=\\\"Number B\\\" value=\\\"2\\\" />\\n      </Collection>\\n      {asyncStatus.status === undefined && (\\n        <label>Async Check Not Started Yet</label>\\n      )}\\n      {asyncStatus.status === \\'asyncStart\\' && <label>Checking...</label>}\\n      {asyncStatus.status === \\'asyncError\\' && (\\n        <label>{asyncStatus.value}</label>\\n      )}\\n      {asyncStatus.status === \\'asyncSuccess\\' && (\\n        <label>{asyncStatus.value}</label>\\n      )}\\n      <Submit />\\n    </Form>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Form,\n      Submit,\n      asyncTestForm,\n      Input,\n      Item,\n      reduceTotalPrice,\n      reduceTotalQuantity,\n      useValidation,\n      useAsyncValidation,\n      Collection,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        const [asyncStatus, validationProps] = useAsyncValidation(asyncTestForm);\n\n        const onSubmit = state => alert(JSON.stringify(state));\n\n        return <Form onSubmit={onSubmit} {...validationProps} mdxType=\"Form\">\n        <Collection object name=\"values\" mdxType=\"Collection\">\n          <Input type=\"number\" name=\"a\" placeholder=\"Number A\" value=\"1\" mdxType=\"Input\" />\n          <Input type=\"number\" name=\"b\" placeholder=\"Number B\" value=\"2\" mdxType=\"Input\" />\n        </Collection>\n        {asyncStatus.status === undefined && <label>Async Check Not Started Yet</label>}\n        {asyncStatus.status === \"asyncStart\" && <label>Checking...</label>}\n        {asyncStatus.status === \"asyncError\" && <label>{asyncStatus.value}</label>}\n        {asyncStatus.status === \"asyncSuccess\" && <label>{asyncStatus.value}</label>}\n        <Submit mdxType=\"Submit\" />\n      </Form>;\n      }}\n    </Playground>\n    <h4 {...{\n      \"id\": \"detailed-explanation-1\"\n    }}>{`Detailed Explanation:`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import { useForm } from 'usetheform'\n\nconst Submit = () => {\n  const { isValid } = useForm();\n  return (\n    <button disabled={!isValid} type=\"submit\">\n      Submit\n    </button>\n  );\n};\n\nexport const asyncTestForm = ({ values }) =>\n  new Promise((resolve, reject) => {\n    // it could be an API call or any async operation\n    setTimeout(() => {\n      if (!values || !values.a || !values.b) {\n        reject(\"Emtpy values are not allowed \");\n      }\n      if (values.a + values.b >= 5) {\n        reject(\"The sum must be less than '5'\");\n      } else {\n        resolve(\"Success\");\n      }\n    }, 1000);\n  });\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}