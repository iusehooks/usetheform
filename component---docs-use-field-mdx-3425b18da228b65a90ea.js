(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{TYlZ:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return i})),n.d(t,"default",(function(){return o}));var a=n("Fcif"),l=n("+I+c"),r=(n("mXGw"),n("/FXl")),b=n("TjRS"),i=(n("aD51"),{});void 0!==i&&i&&i===Object(i)&&Object.isExtensible(i)&&!i.hasOwnProperty("__filemeta")&&Object.defineProperty(i,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"docs/useField.mdx"}});var c={_frontmatter:i},p=b.a;function o(e){var t=e.components,n=Object(l.a)(e,["components"]);return Object(r.b)(p,Object(a.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"usefield"},"useField"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"useField(options: Object)")," allows custom input primitives to be built."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"  const fieldInputProps = useField(options)\n")),Object(r.b)("h2",{id:"arguments"},"Arguments"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"options")),": object"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"type")),": string"),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Strings accepted: ",Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"https://www.w3schools.com/html/html_form_input_types.asp"}),"W3schools Input Types"),' - "select" - "custom"'))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"name")),": string"),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"A field's name in Usetheform state. ",Object(r.b)("br",null)),Object(r.b)("li",{parentName:"ul"},"If your Field is rendered within a ",Object(r.b)("inlineCode",{parentName:"li"},"<Collection array />"),", ",Object(r.b)("strong",{parentName:"li"},"name")," is not allowed as a prop."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"index")),": string"),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"A field's index in an array Collection. ",Object(r.b)("br",null)),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"index")," is only allowed if your Field is rendered within a ",Object(r.b)("inlineCode",{parentName:"li"},"<Collection array /> "),"."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"value")),': string | number | object (only for type="custom")'),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Specifies the initial value of an ",Object(r.b)("em",{parentName:"li"},"input")," element."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"checked")),": boolean"),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Specifies whether an ",Object(r.b)("em",{parentName:"li"},"input"),' element should be pre-selected or not (for type="checkbox" or type="radio"). '),Object(r.b)("li",{parentName:"ul"},"Default value of ",Object(r.b)("em",{parentName:"li"},"false"),"."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"multiple")),": boolean"),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},'Valid only when type="select".'),Object(r.b)("li",{parentName:"ul"},"When present, it specifies that multiple options can be selected at once. "),Object(r.b)("li",{parentName:"ul"},"Default value of ",Object(r.b)("em",{parentName:"li"},"false"),"."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"touched")),": boolean"),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"A field that has been touched/visited. "),Object(r.b)("li",{parentName:"ul"},"Default value of ",Object(r.b)("em",{parentName:"li"},"false"),". "),Object(r.b)("li",{parentName:"ul"},"If ",Object(r.b)("em",{parentName:"li"},"true"),", validation messages (sync and async) will be shown only when the event onBlur of the field is triggered by a user action."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"reducers")),": array | function"),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"An array whose values correspond to different reducing functions."),Object(r.b)("li",{parentName:"ul"},"Reducer functions specify how the Input's value changes.")),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"(nextValue, prevValue, formState) => nextValue\n")))),Object(r.b)("h2",{id:"returns"},"Returns"),Object(r.b)("p",null,"(",Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"FieldInputProps")),"): object"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"An object that holds all the attributes of a field.")),Object(r.b)("h2",{id:"basic-usage"},"Basic usage"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),'const CustomInput = props => {\n  const fieldInputProps = useField({\n    type: "text",\n    name: "simple",\n    value: "foo"\n  });\n  return <input {...fieldInputProps} />;\n}\n')),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),'const CustomField = ({ name, initialValue = { a: "2" } }) => {\n  const { value, setValue } = useField({ type: "custom", name, value: initialValue });\n  const onChange = () => setValue(prev => ({ ...prev, a: "1" }));\n  return (\n    <div>\n      <pre>\n        <code>{JSON.stringify(value)}</code>\n      </pre>\n      <button type="button" onClick={onChange}>\n        Change Value\n      </button>\n    </div>\n  );\n};\n')),Object(r.b)("h2",{id:"reducers"},"Reducers"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),'const maxNumber10 = (nextValue, prevValue) => nextValue > 10 ? prevValue : nextValue;\nconst minNumber1 = (nextValue, prevValue) => nextValue <= 1 ? prevValue : nextValue;\n\nconst CustomInput = props => {\n  const fieldInputProps = useField({\n      type: "number",\n      name: "numberWithReducer",\n      reducers: [minNumber1, maxNumber10],\n      value: "1"\n    });\n  return <input {...fieldInputProps} />;\n}\n')),Object(r.b)("h2",{id:"validation"},"Validation"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),'const email = value =>\n    !(value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value))\n      ? undefined\n      : "Mail not Valid";\nconst required = value => (value && value.trim() !== "" ? undefined : "Required");\n\nconst CustomInput = props => {\n  const [status, validation] = useValidation([required, email]);\n  const fieldInputProps = useField({\n      type: "text",\n      touched: true,\n      name: "email",\n      ...validation\n  });\n  return (\n    <div>\n      <input {...fieldInputProps} />\n      {status.error && <label>{status.error}</label>}\n    </div>\n  )\n}\n')))}void 0!==o&&o&&o===Object(o)&&Object.isExtensible(o)&&!o.hasOwnProperty("__filemeta")&&Object.defineProperty(o,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"docs/useField.mdx"}}),o.isMDXComponent=!0}}]);
//# sourceMappingURL=component---docs-use-field-mdx-3425b18da228b65a90ea.js.map